{"version":3,"sources":["../lib/scion.js"],"names":["util","extend","Object","assign","to","from","keys","forEach","k","STATE_TYPES","BASIC","COMPOSITE","PARALLEL","HISTORY","INITIAL","FINAL","SCXML_IOPROCESSOR_TYPE","HTTP_IOPROCESSOR_TYPE","transitionWithTargets","t","targets","transitionComparator","t1","t2","documentOrder","initializeModel","rootState","transitions","idToStateMap","Map","idCount","generateId","type","undefined","count","id","has","wrapInFakeRootState","state","$deserializeDatamodel","$serializeDatamodel","$idToStateMap","docUrl","states","$type","target","statesWithInitialAttributes","transitionToString","sourceState","events","join","cond","name","stateToString","populateStateIdMap","set","j","len","length","traverse","ancestors","printTrace","toString","push","apply","depth","parent","transition","source","bind","ancs","concat","typeEnum","isAtomic","Error","descendants","map","s","reduce","a","b","initialChildren","Array","isArray","initial","filter","child","initialRef","checkInitialRef","historyChildren","historyRef","prop","every","handler","invokes","invoke","finalize","connectIntialAttributes","initialStates","initialState","get","RX_WHITESPACE","connectTransitionGraph","i","onTransition","event","trim","split","lcca","getLCCA","scope","getScope","transitionIsReallyInternal","indexOf","s1","s2","commonAncestors","anc","fakeRootState","EventEmitter","_listeners","prototype","on","_on","listener","once","_once","self","__once","args","arguments","off","_off","index","splice","emit","_emit","slice","call","modifiedArgs","listeners","ArraySet","l","o","Set","add","x","remove","delete","union","v","difference","contains","iter","isEmpty","size","equals","RX_TRAILING_WILDCARD","isEventPrefixMatch","prefix","fullName","replace","charAt","isTransitionMatch","eventName","some","tEvent","scxmlPrefixTransitionSelector","evaluator","selectEventlessTransitions","eventlessTransitionSelector","query","isDescendant","getAncestors","root","getAncestorsOrSelf","getDescendantsOrSelf","getTransitionWithHigherSourceChildPriority","_args","r","getStateWithHigherSourceChildPriority","sortInEntryOrder","initializeModelGeneratorFn","modelFn","opts","interpreter","_x","_sessionid","_ioprocessors","isIn","deserializeSerializedConfiguration","serializedConfiguration","deserializeHistory","serializedHistory","sid","process","env","DEBUG","BaseInterpreter","EVENTS","modelOrFnGenerator","_scriptingContext","interpreterScriptingContext","InterpreterScriptingContext","generateSessionid","sessionid","sessionRegistry","location","scxml","model","JSON","parse","stringify","_model","console","log","priorityComparisonFn","transitionSelector","String","_externalEventQueue","_internalEventQueue","params","snapshot","_configuration","_historyValue","_isInFinalState","_log","sessionIdCounter","beget","cancel","parentSession","invokeid","_exitInterpreter","_cancelAllDelayedSends","statesToExit","_getFullConfiguration","sort","stateExited","onExit","exitIdx","exitLen","block","blockIdx","blockLen","actionRef","e","_handleError","cancelInvoke","send","data","donedata","start","_initStart","_performBigStep","getConfiguration","startAsync","cb","genAsync","nop","getFullConfiguration","stateName","isFinal","currentEvent","keepGoing","allStatesExited","allStatesEntered","_startBigStep","_selectTransitionsAndPerformSmallStep","_finishBigStep","selectedTransitions","_selectTransitions","ev","shift","statesExited","statesEntered","_performSmallStep","autoforward","_evaluateAction","action","statesToInvoke","f","_timeouts","timeoutOptions","sendOptions","delay","clearTimeout","timeoutHandle","_timeoutMap","key","_performBigStepAsync","nextStep","setImmediate","selectedTransitionsWithTargets","_exitStates","_executeTransitions","_enterStates","basicStatesExited","_getStatesExited","isDeep","s0","sortedTransitions","stxIdx","targetIds","txIdx","txLen","statesForDefaultEntry","defaultHistoryContent","_computeEntrySet","enterIdx","enterLen","stateEntered","onEntry","entryIdx","entryLen","grandparent","isInFinalState","__proto__","match","tagname","line","column","reason","message","transitionList","desc","configList","cfgIdx","cfgLen","ancIdx","ancLen","sortedStatesExited","statesToEnter","_addDescendantStatesToEnter","ancestor","_getEffectiveTargetStates","_addAncestorStatesToEnter","targetState","enabledTransitions","atomicStates","loop","priorityEnabledTransitions","_removeConflictingTransition","_computeExitSet","filteredTransitions","t1Preempted","transitionsToRemove","t1ExitSet","t2ExitSet","hasIntersection","t3","arg","inspect","registerListener","unregisterListener","getAllTransitionEvents","getEvents","stateIdx","stateLen","getSnapshot","_serializeHistory","Statechart","_isStepping","module","exports","F","gen","evtObjOrName","optionalData","c","err","config","_interpreter","_invokeMap","validateUriRegex","invokeSendTargetRegex","scxmlSendTargetRegex","raise","_installDefaultPropsOnEvent","parseXmlStringAsDOM","xmlString","xmlParser","invokeObj","Promise","resolve","reject","invokers","session","sessionPromise","then","isInternal","origin","origintype","options","sendType","validateSend","sendAction","targetIsValidUri","test","sendid","defaultSendAction","setTimeout","doSend","targetSessionId","invokeId","sendAsync","publish","sendFn","customSend","customCancel"],"mappings":";;0BAgBmB,M;;gCAAA,M;;;;;;;;2BAAfA,I;AAhBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,QAAIC,SAASC,OAAOC,MAAP,IACT,UAAUC,EAAV,EAAcC,IAAd,EAAmB;AACjBH,eAAOI,IAAP,CAAYD,IAAZ,EAAkBE,OAAlB,CAA0B,UAASC,CAAT,EAAW;AACnCJ,eAAGI,CAAH,IAAQH,KAAKG,CAAL,CAAR;AACD,SAFD;AAGA,eAAOJ,EAAP;AACD,KANL;;AAQA,QAAIK,cAAc;AACdC,eAAO,CADO;AAEdC,mBAAW,CAFG;AAGdC,kBAAU,CAHI;AAIdC,iBAAS,CAJK;AAKdC,iBAAS,CALK;AAMdC,eAAO;AANO,KAAlB;;AASA,QAAMC,yBAAyB,iDAA/B;AACA,QAAMC,wBAAwB,qDAA9B;;AAEA,aAASC,qBAAT,CAA+BC,CAA/B,EAAiC;AAC7B,eAAOA,EAAEC,OAAT;AACH;;AAED,aAASC,oBAAT,CAA8BC,EAA9B,EAAkCC,EAAlC,EAAsC;AAClC,eAAOD,GAAGE,aAAH,GAAmBD,GAAGC,aAA7B;AACH;;AAED,aAASC,eAAT,CAAyBC,SAAzB,EAAmC;AAC/B,YAAIC,cAAc,EAAlB;AAAA,YAAsBC,eAAe,IAAIC,GAAJ,EAArC;AAAA,YAAgDL,gBAAgB,CAAhE;;AAGA;AACA;AACA,YAAIM,UAAU,EAAd;;AAEA,iBAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,gBAAGF,QAAQE,IAAR,MAAkBC,SAArB,EAAgCH,QAAQE,IAAR,IAAgB,CAAhB;;AAEhC,eAAG;AACD,oBAAIE,QAAQJ,QAAQE,IAAR,GAAZ;AACA,oBAAIG,KAAK,gBAAgBH,IAAhB,GAAuB,GAAvB,GAA6BE,KAAtC;AACD,aAHD,QAGSN,aAAaQ,GAAb,CAAiBD,EAAjB,CAHT;;AAKA,mBAAOA,EAAP;AACH;;AAED,iBAASE,mBAAT,CAA6BC,KAA7B,EAAmC;AAC/B,mBAAO;AACHC,uCAAwBD,MAAMC,qBAAN,IAA+B,YAAU,CAAE,CADhE;AAEHC,qCAAsBF,MAAME,mBAAN,IAA6B,YAAU;AAAE,2BAAO,IAAP;AAAa,iBAFzE;AAGHC,+BAAgBb,YAHb,EAG6B;AAChCc,wBAASJ,MAAMI,MAJZ;AAKHC,wBAAS,CACL;AACIC,2BAAQ,SADZ;AAEIjB,iCAAc,CAAC;AACXkB,gCAASP;AADE,qBAAD;AAFlB,iBADK,EAOLA,KAPK;AALN,aAAP;AAeH;;AAED,YAAIQ,8BAA8B,EAAlC;;AAEA,iBAASC,kBAAT,CAA4BC,WAA5B,EAAwC;AACtC,mBAAUA,WAAV,aAA4B,KAAKC,MAAL,GAAc,MAAM,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,GAAjB,CAAN,GAA8B,GAA5C,GAAkD,IAA9E,KAAqF,KAAKC,IAAL,GAAY,MAAM,KAAKA,IAAL,CAAUC,IAAhB,GAAuB,GAAnC,GAAyC,EAA9H,eAAwI,KAAKhC,OAAL,GAAe,KAAKA,OAAL,CAAa8B,IAAb,CAAkB,GAAlB,CAAf,GAAwC,IAAhL;AACD;;AAED,iBAASG,aAAT,GAAwB;AACtB,mBAAO,KAAKlB,EAAZ;AACD;;AAED,iBAASmB,kBAAT,CAA4BhB,KAA5B,EAAkC;AAChC;AACA,gBAAGA,MAAMH,EAAT,EAAY;AACRP,6BAAa2B,GAAb,CAAiBjB,MAAMH,EAAvB,EAA2BG,KAA3B;AACH;;AAED,gBAAGA,MAAMK,MAAT,EAAiB;AACb,qBAAK,IAAIa,IAAI,CAAR,EAAWC,MAAMnB,MAAMK,MAAN,CAAae,MAAnC,EAA2CF,IAAIC,GAA/C,EAAoDD,GAApD,EAAyD;AACrDF,uCAAmBhB,MAAMK,MAAN,CAAaa,CAAb,CAAnB;AACH;AACJ;AACF;;AAED,iBAASG,QAAT,CAAkBC,SAAlB,EAA4BtB,KAA5B,EAAkC;;AAE9B,gBAAGuB,UAAH,EAAevB,MAAMwB,QAAN,GAAiBT,aAAjB;;AAEf;AACA,gBAAGf,MAAMX,WAAT,EAAsBA,YAAYoC,IAAZ,CAAiBC,KAAjB,CAAuBrC,WAAvB,EAAmCW,MAAMX,WAAzC;;AAEtB;AACA;AACAW,kBAAMM,KAAN,GAAcN,MAAMM,KAAN,IAAe,OAA7B;;AAEA;AACAN,kBAAMsB,SAAN,GAAkBA,SAAlB;AACAtB,kBAAM2B,KAAN,GAAcL,UAAUF,MAAxB;AACApB,kBAAM4B,MAAN,GAAeN,UAAU,CAAV,CAAf;AACAtB,kBAAMd,aAAN,GAAsBA,eAAtB;;AAEA;AACAc,kBAAMX,WAAN,GAAoBW,MAAMX,WAAN,IAAqB,EAAzC;AACA,iBAAK,IAAI6B,IAAI,CAAR,EAAWC,MAAMnB,MAAMX,WAAN,CAAkB+B,MAAxC,EAAgDF,IAAIC,GAApD,EAAyDD,GAAzD,EAA8D;AAC1D,oBAAIW,aAAa7B,MAAMX,WAAN,CAAkB6B,CAAlB,CAAjB;AACAW,2BAAW3C,aAAX,GAA2BA,eAA3B;AACA2C,2BAAWC,MAAX,GAAoB9B,KAApB;AACA,oBAAGuB,UAAH,EAAeM,WAAWL,QAAX,GAAsBf,mBAAmBsB,IAAnB,CAAwBF,UAAxB,EAAoC7B,KAApC,CAAtB;AAClB;;AAED;AACA,gBAAGA,MAAMK,MAAT,EAAiB;AACb,oBAAI2B,OAAO,CAAChC,KAAD,EAAQiC,MAAR,CAAeX,SAAf,CAAX;AACA,qBAAK,IAAIJ,IAAI,CAAR,EAAWC,MAAMnB,MAAMK,MAAN,CAAae,MAAnC,EAA2CF,IAAIC,GAA/C,EAAoDD,GAApD,EAAyD;AACrDG,6BAASW,IAAT,EAAehC,MAAMK,MAAN,CAAaa,CAAb,CAAf;AACH;AACJ;;AAED;AACA,oBAAOlB,MAAMM,KAAb;AACI,qBAAK,UAAL;AACIN,0BAAMkC,QAAN,GAAiB/D,YAAYG,QAA7B;AACA0B,0BAAMmC,QAAN,GAAiB,KAAjB;AACA;AACJ,qBAAK,SAAL;AACInC,0BAAMkC,QAAN,GAAiB/D,YAAYK,OAA7B;AACAwB,0BAAMmC,QAAN,GAAiB,IAAjB;AACA;AACJ,qBAAK,SAAL;AACInC,0BAAMkC,QAAN,GAAiB/D,YAAYI,OAA7B;AACAyB,0BAAMmC,QAAN,GAAiB,IAAjB;AACA;AACJ,qBAAK,OAAL;AACInC,0BAAMkC,QAAN,GAAiB/D,YAAYM,KAA7B;AACAuB,0BAAMmC,QAAN,GAAiB,IAAjB;AACA;AACJ,qBAAK,OAAL;AACA,qBAAK,OAAL;AACI,wBAAGnC,MAAMK,MAAN,IAAgBL,MAAMK,MAAN,CAAae,MAAhC,EAAuC;AACnCpB,8BAAMkC,QAAN,GAAiB/D,YAAYE,SAA7B;AACA2B,8BAAMmC,QAAN,GAAiB,KAAjB;AACH,qBAHD,MAGK;AACDnC,8BAAMkC,QAAN,GAAiB/D,YAAYC,KAA7B;AACA4B,8BAAMmC,QAAN,GAAiB,IAAjB;AACH;AACD;AACJ;AACI,0BAAM,IAAIC,KAAJ,CAAU,yBAAyBpC,MAAMM,KAAzC,CAAN;AA5BR;;AA+BA;AACA,gBAAGN,MAAMK,MAAT,EAAgB;AACZL,sBAAMqC,WAAN,GAAoBrC,MAAMK,MAAN,CAAa4B,MAAb,CAAoBjC,MAAMK,MAAN,CAAaiC,GAAb,CAAiB,UAASC,CAAT,EAAW;AAAC,2BAAOA,EAAEF,WAAT;AAAsB,iBAAnD,EAAqDG,MAArD,CAA4D,UAASC,CAAT,EAAWC,CAAX,EAAa;AAAC,2BAAOD,EAAER,MAAF,CAASS,CAAT,CAAP;AAAoB,iBAA9F,EAA+F,EAA/F,CAApB,CAApB;AACH,aAFD,MAEK;AACD1C,sBAAMqC,WAAN,GAAoB,EAApB;AACH;;AAED,gBAAIM,eAAJ;AACA,gBAAG3C,MAAMkC,QAAN,KAAmB/D,YAAYE,SAAlC,EAA4C;AACxC;;AAEA,oBAAGuE,MAAMC,OAAN,CAAc7C,MAAM8C,OAApB,KAAgC,OAAO9C,MAAM8C,OAAb,KAAyB,QAA5D,EAAqE;AACjEtC,gDAA4BiB,IAA5B,CAAiCzB,KAAjC;AACH,iBAFD,MAEK;AACD;AACA2C,sCAAkB3C,MAAMK,MAAN,CAAa0C,MAAb,CAAoB,UAASC,KAAT,EAAe;AACjD,+BAAOA,MAAM1C,KAAN,KAAgB,SAAvB;AACH,qBAFiB,CAAlB;;AAIAN,0BAAMiD,UAAN,GAAmB,CAACN,gBAAgBvB,MAAhB,GAAyBuB,gBAAgB,CAAhB,CAAzB,GAA8C3C,MAAMK,MAAN,CAAa,CAAb,CAA/C,CAAnB;AACA6C,oCAAgBlD,KAAhB;AACH;AAEJ;;AAED;AACA,gBAAGA,MAAMkC,QAAN,KAAmB/D,YAAYE,SAA/B,IACK2B,MAAMkC,QAAN,KAAmB/D,YAAYG,QADvC,EACgD;;AAE5C,oBAAI6E,kBAAkBnD,MAAMK,MAAN,CAAa0C,MAAb,CAAoB,UAASR,CAAT,EAAW;AACjD,2BAAOA,EAAEjC,KAAF,KAAY,SAAnB;AACH,iBAFqB,CAAtB;;AAIDN,sBAAMoD,UAAN,GAAmBD,eAAnB;AACF;;AAED;AACA,gBAAG,CAACnD,MAAMH,EAAV,EAAa;AACTG,sBAAMH,EAAN,GAAWJ,WAAWO,MAAMM,KAAjB,CAAX;AACAhB,6BAAa2B,GAAb,CAAiBjB,MAAMH,EAAvB,EAA2BG,KAA3B;AACH;;AAED;AACA,aAAC,SAAD,EAAW,QAAX,EAAqB/B,OAArB,CAA6B,UAASoF,IAAT,EAAc;AACzC,oBAAIrD,MAAMqD,IAAN,CAAJ,EAAiB;AACf,wBAAG,CAACT,MAAMC,OAAN,CAAc7C,MAAMqD,IAAN,CAAd,CAAJ,EAA+B;AAC7BrD,8BAAMqD,IAAN,IAAc,CAACrD,MAAMqD,IAAN,CAAD,CAAd;AACD;AACD,wBAAG,CAACrD,MAAMqD,IAAN,EAAYC,KAAZ,CAAkB,UAASC,OAAT,EAAiB;AAAE,+BAAOX,MAAMC,OAAN,CAAcU,OAAd,CAAP;AAAgC,qBAArE,CAAJ,EAA2E;AACzEvD,8BAAMqD,IAAN,IAAc,CAACrD,MAAMqD,IAAN,CAAD,CAAd;AACD;AACF;AACF,aATD;;AAWA,gBAAIrD,MAAMwD,OAAN,IAAiB,CAACZ,MAAMC,OAAN,CAAc7C,MAAMwD,OAApB,CAAtB,EAAoD;AAChDxD,sBAAMwD,OAAN,GAAgB,CAACxD,MAAMwD,OAAP,CAAhB;AACAxD,sBAAMwD,OAAN,CAAcvF,OAAd,CAAuB,kBAAU;AAC/B,wBAAIwF,OAAOC,QAAP,IAAmB,CAACd,MAAMC,OAAN,CAAcY,OAAOC,QAArB,CAAxB,EAAwD;AACtDD,+BAAOC,QAAP,GAAkB,CAACD,OAAOC,QAAR,CAAlB;AACD;AACF,iBAJD;AAKH;AACJ;;AAED;;AAEA,iBAASR,eAAT,CAAyBlD,KAAzB,EAA+B;AAC7B,gBAAG,CAACA,MAAMiD,UAAV,EAAsB,MAAM,IAAIb,KAAJ,CAAU,yDAAyDpC,MAAMH,EAAzE,CAAN;AACvB;AACD,iBAAS8D,uBAAT,GAAkC;AAChC,iBAAK,IAAIzC,IAAI,CAAR,EAAWC,MAAMX,4BAA4BY,MAAlD,EAA0DF,IAAIC,GAA9D,EAAmED,GAAnE,EAAwE;AACtE,oBAAIqB,IAAI/B,4BAA4BU,CAA5B,CAAR;;AAEA,oBAAI0C,gBAAgBhB,MAAMC,OAAN,CAAcN,EAAEO,OAAhB,IAA2BP,EAAEO,OAA7B,GAAuC,CAACP,EAAEO,OAAH,CAA3D;AACAP,kBAAEU,UAAF,GAAeW,cAActB,GAAd,CAAkB,UAASuB,YAAT,EAAsB;AAAE,2BAAOvE,aAAawE,GAAb,CAAiBD,YAAjB,CAAP;AAAwC,iBAAlF,CAAf;AACAX,gCAAgBX,CAAhB;AACD;AACF;;AAED,YAAIwB,gBAAgB,KAApB;;AAEA,iBAASC,sBAAT,GAAiC;AAC7B;AACA,iBAAK,IAAIC,IAAI,CAAR,EAAW9C,MAAM9B,YAAY+B,MAAlC,EAA0C6C,IAAI9C,GAA9C,EAAmD8C,GAAnD,EAAwD;AACpD,oBAAIpF,IAAIQ,YAAY4E,CAAZ,CAAR;AACA,oBAAIpF,EAAEqF,YAAF,IAAkB,CAACtB,MAAMC,OAAN,CAAchE,EAAEqF,YAAhB,CAAvB,EAAsD;AAClDrF,sBAAEqF,YAAF,GAAiB,CAACrF,EAAEqF,YAAH,CAAjB;AACH;;AAED;AACA,oBAAI,OAAOrF,EAAEsF,KAAT,KAAmB,QAAvB,EAAiC;AAC7BtF,sBAAE8B,MAAF,GAAW9B,EAAEsF,KAAF,CAAQC,IAAR,GAAeC,KAAf,CAAqBN,aAArB,CAAX;AACH;AACD,uBAAOlF,EAAEsF,KAAT;;AAEA,oBAAGtF,EAAEC,OAAF,IAAc,OAAOD,EAAE0B,MAAT,KAAoB,WAArC,EAAmD;AAC/C;AACA;AACH;;AAED,oBAAG,OAAO1B,EAAE0B,MAAT,KAAoB,QAAvB,EAAgC;AAC5B,wBAAIA,SAASjB,aAAawE,GAAb,CAAiBjF,EAAE0B,MAAnB,CAAb;AACA,wBAAG,CAACA,MAAJ,EAAY,MAAM,IAAI6B,KAAJ,CAAU,yCAAyCvD,EAAE0B,MAArD,CAAN;AACZ1B,sBAAE0B,MAAF,GAAWA,MAAX;AACA1B,sBAAEC,OAAF,GAAY,CAACD,EAAE0B,MAAH,CAAZ;AACH,iBALD,MAKM,IAAGqC,MAAMC,OAAN,CAAchE,EAAE0B,MAAhB,CAAH,EAA2B;AAC7B1B,sBAAEC,OAAF,GAAYD,EAAE0B,MAAF,CAAS+B,GAAT,CAAa,UAAS/B,MAAT,EAAgB;AACrC,4BAAG,OAAOA,MAAP,KAAkB,QAArB,EAA8B;AAC1BA,qCAASjB,aAAawE,GAAb,CAAiBvD,MAAjB,CAAT;AACA,gCAAG,CAACA,MAAJ,EAAY,MAAM,IAAI6B,KAAJ,CAAU,yCAAyCvD,EAAE0B,MAArD,CAAN;AACZ,mCAAOA,MAAP;AACH,yBAJD,MAIK;AACD,mCAAOA,MAAP;AACH;AACJ,qBARW,CAAZ;AASH,iBAVK,MAUA,IAAG,QAAO1B,EAAE0B,MAAT,MAAoB,QAAvB,EAAgC;AAClC1B,sBAAEC,OAAF,GAAY,CAACD,EAAE0B,MAAH,CAAZ;AACH,iBAFK,MAED;AACD,0BAAM,IAAI6B,KAAJ,CAAU,yCAAyCvD,EAAE0B,MAArD,CAAN;AACH;AACJ;;AAED;AACA,iBAAK,IAAI0D,IAAI,CAAR,EAAW9C,MAAM9B,YAAY+B,MAAlC,EAA0C6C,IAAI9C,GAA9C,EAAmD8C,GAAnD,EAAwD;AACpD,oBAAIpF,IAAIQ,YAAY4E,CAAZ,CAAR;AACA,oBAAGpF,EAAEC,OAAL,EAAcD,EAAEyF,IAAF,GAASC,QAAQ1F,EAAEiD,MAAV,EAAiBjD,EAAEC,OAAF,CAAU,CAAV,CAAjB,CAAT,CAFsC,CAEM;;AAE1DD,kBAAE2F,KAAF,GAAUC,SAAS5F,CAAT,CAAV;AACH;AACJ;;AAED,iBAAS4F,QAAT,CAAkB5C,UAAlB,EAA6B;AACzB;AACA;AACA,gBAAI6C,6BACI7C,WAAWnC,IAAX,KAAoB,UAApB,IACEmC,WAAWC,MAAX,CAAkBI,QAAlB,KAA+B/D,YAAYE,SAD7C,IAC4D;AAC1DwD,uBAAWC,MAAX,CAAkBF,MAFpB,IAEiC;AAC/BC,uBAAW/C,OAHb,IAGwB;AACtB+C,uBAAW/C,OAAX,CAAmBwE,KAAnB,CACI,UAAS/C,MAAT,EAAgB;AAAE,uBAAOsB,WAAWC,MAAX,CAAkBO,WAAlB,CAA8BsC,OAA9B,CAAsCpE,MAAtC,IAAgD,CAAC,CAAxD;AAA2D,aADjF,CALV;;AAQA,gBAAG,CAACsB,WAAW/C,OAAf,EAAuB;AACnB,uBAAO,IAAP;AACH,aAFD,MAEM,IAAG4F,0BAAH,EAA8B;AAChC,uBAAO7C,WAAWC,MAAlB;AACH,aAFK,MAED;AACD,uBAAOD,WAAWyC,IAAlB;AACH;AACJ;;AAED,iBAASC,OAAT,CAAiBK,EAAjB,EAAqBC,EAArB,EAAyB;AACrB,gBAAIC,kBAAkB,EAAtB;AACA,iBAAK,IAAI5D,IAAI,CAAR,EAAWC,MAAMyD,GAAGtD,SAAH,CAAaF,MAAnC,EAA2CF,IAAIC,GAA/C,EAAoDD,GAApD,EAAyD;AACrD,oBAAI6D,MAAMH,GAAGtD,SAAH,CAAaJ,CAAb,CAAV;AACA,oBAAG,CAAC6D,IAAI7C,QAAJ,KAAiB/D,YAAYE,SAA7B,IAA0C0G,IAAI7C,QAAJ,KAAiB/D,YAAYG,QAAxE,KACCyG,IAAI1C,WAAJ,CAAgBsC,OAAhB,CAAwBE,EAAxB,IAA8B,CAAC,CADnC,EACqC;AACjCC,oCAAgBrD,IAAhB,CAAqBsD,GAArB;AACH;AACJ;AACD,gBAAG,CAACD,gBAAgB1D,MAApB,EAA4B,MAAM,IAAIgB,KAAJ,CAAU,gCAAV,CAAN;AAC5B,mBAAO0C,gBAAgB,CAAhB,CAAP;AACH;;AAED;AACA;AACA9D,2BAAmB5B,SAAnB;AACA,YAAI4F,gBAAgBjF,oBAAoBX,SAApB,CAApB,CArS+B,CAqSsB;AACrDiC,iBAAS,EAAT,EAAY2D,aAAZ;AACAhB;AACAL;;AAEA,eAAOqB,aAAP;AACH;;AAED;AACA,aAASC,YAAT,GAAwB;AACpB,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKA,UAAL,CAAgB,GAAhB,IAAuB,EAAvB;AACH;;AAEDD,iBAAaE,SAAb,CAAuBC,EAAvB,GAA4B,SAASC,GAAT,CAAa3F,IAAb,EAAmB4F,QAAnB,EAA6B;AACrD,YAAI,CAAC1C,MAAMC,OAAN,CAAc,KAAKqC,UAAL,CAAgBxF,IAAhB,CAAd,CAAL,EAA2C;AACvC,iBAAKwF,UAAL,CAAgBxF,IAAhB,IAAwB,EAAxB;AACH;;AAED,YAAI,KAAKwF,UAAL,CAAgBxF,IAAhB,EAAsBiF,OAAtB,CAA8BW,QAA9B,MAA4C,CAAC,CAAjD,EAAoD;AAChD,iBAAKJ,UAAL,CAAgBxF,IAAhB,EAAsB+B,IAAtB,CAA2B6D,QAA3B;AACH;;AAED,eAAO,IAAP;AACH,KAVD;;AAYAL,iBAAaE,SAAb,CAAuBI,IAAvB,GAA8B,SAASC,KAAT,CAAe9F,IAAf,EAAqB4F,QAArB,EAA+B;AACzD,YAAIG,OAAO,IAAX;;AAEA,iBAASC,MAAT,GAAkB;AACd,iBAAK,IAAIC,OAAO,EAAX,EAAe1B,IAAI,CAAxB,EAA2BA,IAAI2B,UAAUxE,MAAzC,EAAiD6C,KAAK,CAAtD,EAAyD;AACrD0B,qBAAK1B,CAAL,IAAU2B,UAAU3B,CAAV,CAAV;AACH;;AAEDwB,iBAAKI,GAAL,CAASnG,IAAT,EAAegG,MAAf;AACAJ,qBAAS5D,KAAT,CAAe+D,IAAf,EAAqBE,IAArB;AACH;;AAEDD,eAAOJ,QAAP,GAAkBA,QAAlB;;AAEA,eAAO,KAAKF,EAAL,CAAQ1F,IAAR,EAAcgG,MAAd,CAAP;AACH,KAfD;;AAiBAT,iBAAaE,SAAb,CAAuBU,GAAvB,GAA6B,SAASC,IAAT,CAAcpG,IAAd,EAAoB4F,QAApB,EAA8B;;AAEvD,YAAG,OAAO5F,IAAP,KAAgB,WAAnB,EAA+B;AAC3B9B,mBAAOI,IAAP,CAAY,KAAKkH,UAAjB,EAA6BjH,OAA7B,CAAqC,UAASyB,IAAT,EAAc;AACjD,qBAAK,IAAIuE,IAAI,CAAb,EAAgBA,IAAI,KAAKiB,UAAL,CAAgBxF,IAAhB,EAAsB0B,MAA1C,EAAkD6C,KAAK,CAAvD,EAA0D;AACtD,wBAAI,KAAKiB,UAAL,CAAgBxF,IAAhB,EAAsBuE,CAAtB,EAAyBqB,QAAzB,KAAsCA,QAA1C,EAAoD;AAChDS,gCAAQ9B,CAAR;AACA;AACH;AACJ;AACF,aAPD,EAOG,IAPH;AAQA,mBAAO,IAAP;AACH;;AAED,YAAI,CAACrB,MAAMC,OAAN,CAAc,KAAKqC,UAAL,CAAgBxF,IAAhB,CAAd,CAAL,EAA2C;AACvC,mBAAO,IAAP;AACH;;AAED,YAAI,OAAO4F,QAAP,KAAoB,WAAxB,EAAqC;AACjC,iBAAKJ,UAAL,CAAgBxF,IAAhB,IAAwB,EAAxB;AACA,mBAAO,IAAP;AACH;;AAED,YAAIqG,QAAQ,KAAKb,UAAL,CAAgBxF,IAAhB,EAAsBiF,OAAtB,CAA8BW,QAA9B,CAAZ;;AAEA,YAAIS,UAAU,CAAC,CAAf,EAAkB;AACd,iBAAK,IAAI9B,IAAI,CAAb,EAAgBA,IAAI,KAAKiB,UAAL,CAAgBxF,IAAhB,EAAsB0B,MAA1C,EAAkD6C,KAAK,CAAvD,EAA0D;AACtD,oBAAI,KAAKiB,UAAL,CAAgBxF,IAAhB,EAAsBuE,CAAtB,EAAyBqB,QAAzB,KAAsCA,QAA1C,EAAoD;AAChDS,4BAAQ9B,CAAR;AACA;AACH;AACJ;AACJ;;AAED,aAAKiB,UAAL,CAAgBxF,IAAhB,EAAsBsG,MAAtB,CAA6BD,KAA7B,EAAoC,CAApC;AACA,eAAO,IAAP;AACH,KApCD;;AAsCAd,iBAAaE,SAAb,CAAuBc,IAAvB,GAA8B,SAASC,KAAT,CAAexG,IAAf,EAAqB;;AAE/C,YAAIiG,OAAO/C,MAAMuC,SAAN,CAAgBgB,KAAhB,CAAsBC,IAAtB,CAA2BR,SAA3B,CAAX;AACA,YAAIS,eAAeV,KAAKQ,KAAL,CAAW,CAAX,CAAnB;;AAEA,YAAIG,YAAY,KAAKpB,UAAL,CAAgBxF,IAAhB,CAAhB;AACA,YAAIwB,CAAJ,EAAOC,GAAP;AACA,YAAIyB,MAAMC,OAAN,CAAcyD,SAAd,CAAJ,EAA8B;AAC5B,iBAAKpF,IAAI,CAAJ,EAAOC,MAAMmF,UAAUlF,MAA5B,EAAoCF,IAAIC,GAAxC,EAA6CD,GAA7C,EAAkD;AAChDoF,0BAAUpF,CAAV,EAAaQ,KAAb,CAAmB,IAAnB,EAAyB2E,YAAzB;AACD;AACF;;AAED;AACAC,oBAAY,KAAKpB,UAAL,CAAgB,GAAhB,CAAZ;AACA,aAAKhE,IAAI,CAAJ,EAAOC,MAAMmF,UAAUlF,MAA5B,EAAoCF,IAAIC,GAAxC,EAA6CD,GAA7C,EAAkD;AAC9CoF,sBAAUpF,CAAV,EAAaQ,KAAb,CAAmB,IAAnB,EAAyBiE,IAAzB;AACH;;AAED,eAAO,IAAP;AACH,KApBD;;AAsBA;;AAEA;;AAEA;AACA,aAASY,QAAT,CAAkBC,CAAlB,EAAqB;AACjBA,YAAIA,KAAK,EAAT;AACA,aAAKC,CAAL,GAAS,IAAIC,GAAJ,CAAQF,CAAR,CAAT;AACH;;AAEDD,aAASpB,SAAT,GAAqB;;AAEjBwB,aAAM,aAASC,CAAT,EAAY;AACd,iBAAKH,CAAL,CAAOE,GAAP,CAAWC,CAAX;AACH,SAJgB;;AAMjBC,gBAAS,gBAASD,CAAT,EAAY;AACjB,mBAAO,KAAKH,CAAL,CAAOK,MAAP,CAAcF,CAAd,CAAP;AACH,SARgB;;AAUjBG,eAAQ,eAASP,CAAT,EAAY;AAAA;AAAA;AAAA;;AAAA;AAChB,qCAAcA,EAAEC,CAAhB,8HAAmB;AAAA,wBAAVO,CAAU;;AACf,yBAAKP,CAAL,CAAOE,GAAP,CAAWK,CAAX;AACH;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIhB,mBAAO,IAAP;AACH,SAfgB;;AAiBjBC,oBAAa,oBAAST,CAAT,EAAY;AAAA;AAAA;AAAA;;AAAA;AACrB,sCAAcA,EAAEC,CAAhB,mIAAmB;AAAA,wBAAVO,CAAU;;AACf,yBAAKP,CAAL,CAAOK,MAAP,CAAcE,CAAd;AACH;AAHoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIrB,mBAAO,IAAP;AACH,SAtBgB;;AAwBjBE,kBAAW,kBAASN,CAAT,EAAY;AACnB,mBAAO,KAAKH,CAAL,CAAO3G,GAAP,CAAW8G,CAAX,CAAP;AACH,SA1BgB;;AA4BjBO,cAAO,gBAAW;AACd,mBAAOvE,MAAM7E,IAAN,CAAW,KAAK0I,CAAhB,CAAP;AACH,SA9BgB;;AAgCjBW,iBAAU,mBAAW;AACjB,mBAAO,CAAC,KAAKX,CAAL,CAAOY,IAAf;AACH,SAlCgB;;AAoCjBA,cAAM,gBAAW;AACb,mBAAO,KAAKZ,CAAL,CAAOY,IAAd;AACH,SAtCgB;;AAwCjBC,gBAAS,gBAASzC,EAAT,EAAa;AAClB,gBAAI,KAAK4B,CAAL,CAAOY,IAAP,KAAgBxC,GAAGwC,IAAH,EAApB,EAA+B;AAC3B,uBAAO,KAAP;AACH;;AAHiB;AAAA;AAAA;;AAAA;AAKlB,sCAAc,KAAKZ,CAAnB,mIAAsB;AAAA,wBAAbO,CAAa;;AAClB,wBAAI,CAACnC,GAAGqC,QAAH,CAAYF,CAAZ,CAAL,EAAqB;AACjB,+BAAO,KAAP;AACH;AACJ;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWlB,mBAAO,IAAP;AACH,SApDgB;;AAsDjBxF,kBAAW,oBAAW;AAClB,mBAAO,KAAKiF,CAAL,CAAOY,IAAP,KAAgB,CAAhB,GAAoB,SAApB,GAAgCzE,MAAM7E,IAAN,CAAW,KAAK0I,CAAhB,EAAmB7F,IAAnB,CAAwB,KAAxB,CAAvC;AACH;AAxDgB,KAArB;;AA2DA,QAAM2G,uBAAuB,OAA7B;;AAEA,aAASC,kBAAT,CAA4BC,MAA5B,EAAoCC,QAApC,EAA8C;AAC1CD,iBAASA,OAAOE,OAAP,CAAeJ,oBAAf,EAAqC,EAArC,CAAT;;AAEA,YAAIE,WAAWC,QAAf,EAAyB;AACrB,mBAAO,IAAP;AACH;;AAED,YAAID,OAAOrG,MAAP,GAAgBsG,SAAStG,MAA7B,EAAqC;AACjC,mBAAO,KAAP;AACH;;AAED,YAAIsG,SAASE,MAAT,CAAgBH,OAAOrG,MAAvB,MAAmC,GAAvC,EAA4C;AACxC,mBAAO,KAAP;AACH;;AAED,eAAQsG,SAAS/C,OAAT,CAAiB8C,MAAjB,MAA6B,CAArC;AACH;;AAED,aAASI,iBAAT,CAA2BhJ,CAA3B,EAA8BiJ,SAA9B,EAAyC;AACrC,eAAOjJ,EAAE8B,MAAF,CAASoH,IAAT,CAAc,UAACC,MAAD,EAAY;AAC7B,mBAAOA,WAAW,GAAX,IAAkBR,mBAAmBQ,MAAnB,EAA2BF,SAA3B,CAAzB;AACH,SAFM,CAAP;AAGH;;AAED,aAASG,6BAAT,CAAuCpJ,CAAvC,EAA0CsF,KAA1C,EAAiD+D,SAAjD,EAA4DC,0BAA5D,EAAwF;AACpF,eAAO,CACLA,6BACE,CAACtJ,EAAE8B,MADL,GAEG9B,EAAE8B,MAAF,IAAYwD,KAAZ,IAAqBA,MAAMrD,IAA3B,IAAmC+G,kBAAkBhJ,CAAlB,EAAqBsF,MAAMrD,IAA3B,CAHjC,MAKD,CAACjC,EAAEgC,IAAH,IAAWqH,UAAUrJ,EAAEgC,IAAZ,CALV,CAAP;AAMH;;AAED,aAASuH,2BAAT,CAAqCpI,KAArC,EAA2C;AACzC,eAAOA,MAAMX,WAAN,CAAkB0D,MAAlB,CAAyB,UAASlB,UAAT,EAAoB;AAAE,mBAAO,CAACA,WAAWlB,MAAZ,IAAwBkB,WAAWlB,MAAX,IAAqBkB,WAAWlB,MAAX,CAAkBS,MAAlB,KAA6B,CAAjF;AAAuF,SAAtI,CAAP;AACD;;AAED;AACA,QAAIiH,QAAQ;AACRC,sBAAe,sBAAS1D,EAAT,EAAaC,EAAb,EAAgB;AAC7B;AACA,mBAAOA,GAAGxC,WAAH,CAAesC,OAAf,CAAuBC,EAAvB,IAA6B,CAAC,CAArC;AACD,SAJO;AAKR2D,sBAAc,sBAAShG,CAAT,EAAYiG,IAAZ,EAAkB;AAC5B,gBAAIlH,SAAJ,EAAeyE,KAAf,EAAsB/F,KAAtB;AACA+F,oBAAQxD,EAAEjB,SAAF,CAAYqD,OAAZ,CAAoB6D,IAApB,CAAR;AACA,gBAAIzC,QAAQ,CAAC,CAAb,EAAgB;AACZ,uBAAOxD,EAAEjB,SAAF,CAAY6E,KAAZ,CAAkB,CAAlB,EAAqBJ,KAArB,CAAP;AACH,aAFD,MAEO;AACH,uBAAOxD,EAAEjB,SAAT;AACH;AACJ,SAbO;AAcR;AACAmH,4BAAoB,4BAASlG,CAAT,EAAYiG,IAAZ,EAAkB;AAClC,mBAAO,CAACjG,CAAD,EAAIN,MAAJ,CAAW,KAAKsG,YAAL,CAAkBhG,CAAlB,EAAqBiG,IAArB,CAAX,CAAP;AACH,SAjBO;AAkBRE,8BAAsB,8BAASnG,CAAT,EAAY;AAC9B,mBAAO,CAACA,CAAD,EAAIN,MAAJ,CAAWM,EAAEF,WAAb,CAAP;AACH;AApBO,KAAZ;;AAuBA;AACA,aAASsG,0CAAT,CAAoDC,KAApD,EAA2D;AACvD,YAAI5J,KAAK4J,MAAM,CAAN,CAAT;AAAA,YAAmB3J,KAAK2J,MAAM,CAAN,CAAxB;AACA,YAAIC,IAAIC,sCAAsC9J,GAAG8C,MAAzC,EAAiD7C,GAAG6C,MAApD,CAAR;AACA;AACA,YAAI9C,GAAG8C,MAAH,CAAUH,KAAV,GAAkB1C,GAAG6C,MAAH,CAAUH,KAAhC,EAAuC;AACnC,mBAAO1C,EAAP;AACH,SAFD,MAEO,IAAIA,GAAG6C,MAAH,CAAUH,KAAV,GAAkB3C,GAAG8C,MAAH,CAAUH,KAAhC,EAAuC;AAC1C,mBAAO3C,EAAP;AACH,SAFM,MAEA;AACJ,gBAAIA,GAAGE,aAAH,GAAmBD,GAAGC,aAA1B,EAAyC;AACpC,uBAAOF,EAAP;AACH,aAFF,MAEQ;AACH,uBAAOC,EAAP;AACH;AACJ;AACJ;;AAED,aAAS8J,gBAAT,CAA0BnE,EAA1B,EAA8BC,EAA9B,EAAiC;AAC/B,eAAOiE,sCAAsClE,EAAtC,EAA0CC,EAA1C,IAAgD,CAAC,CAAxD;AACD;;AAED,aAASiE,qCAAT,CAA+ClE,EAA/C,EAAmDC,EAAnD,EAAuD;AACnD;AACA,YAAID,GAAGjD,KAAH,GAAWkD,GAAGlD,KAAlB,EAAyB;AACrB,mBAAO,CAAC,CAAR;AACH,SAFD,MAEO,IAAIiD,GAAGjD,KAAH,GAAWkD,GAAGlD,KAAlB,EAAyB;AAC5B,mBAAO,CAAP;AACH,SAFM,MAEA;AACH;AACA,gBAAIiD,GAAG1F,aAAH,GAAmB2F,GAAG3F,aAA1B,EAAyC;AACrC,uBAAO,CAAP;AACH,aAFD,MAEO,IAAI0F,GAAG1F,aAAH,GAAmB2F,GAAG3F,aAA1B,EAAyC;AAC5C,uBAAO,CAAC,CAAR;AACH,aAFM,MAED;AACF,uBAAO,CAAP;AACH;AACJ;AACJ;;AAED,aAAS8J,0BAAT,CAAoCC,OAApC,EAA6CC,IAA7C,EAAmDC,WAAnD,EAA+D;AAC3D,eAAOF,QAAQ7C,IAAR,CAAa+C,WAAb,EACHD,KAAKE,EADF,EAEHF,KAAKE,EAAL,CAAQC,UAFL,EAGHH,KAAKE,EAAL,CAAQE,aAHL,EAIHH,YAAYI,IAAZ,CAAiBxH,IAAjB,CAAsBoH,WAAtB,CAJG,CAAP;AAKH;;AAED,aAASK,kCAAT,CAA4CC,uBAA5C,EAAoEnK,YAApE,EAAiF;AAC/E,eAAOmK,wBAAwBnH,GAAxB,CAA4B,UAASzC,EAAT,EAAY;AAC7C,gBAAIG,QAAQV,aAAawE,GAAb,CAAiBjE,EAAjB,CAAZ;AACA,gBAAG,CAACG,KAAJ,EAAW,MAAM,IAAIoC,KAAJ,CAAU,4EAA4EvC,EAAtF,CAAN;AACX,mBAAOG,KAAP;AACD,SAJM,CAAP;AAKD;;AAED,aAAS0J,kBAAT,CAA4BC,iBAA5B,EAA8CrK,YAA9C,EAA2D;AACzD,YAAImH,IAAI,EAAR;AACA7I,eAAOI,IAAP,CAAY2L,iBAAZ,EAA+B1L,OAA/B,CAAuC,UAAS2L,GAAT,EAAa;AAClDnD,cAAEmD,GAAF,IAASD,kBAAkBC,GAAlB,EAAuBtH,GAAvB,CAA2B,UAASzC,EAAT,EAAY;AAC9C,oBAAIG,QAAQV,aAAawE,GAAb,CAAiBjE,EAAjB,CAAZ;AACA,oBAAG,CAACG,KAAJ,EAAW,MAAM,IAAIoC,KAAJ,CAAU,sEAAsEvC,EAAhF,CAAN;AACX,uBAAOG,KAAP;AACD,aAJQ,CAAT;AAKD,SAND;AAOA,eAAOyG,CAAP;AACD;;AAED,QAAMlF,aAAa,OAAOsI,OAAP,KAAmB,WAAnB,IAAkC,CAAC,CAACA,QAAQC,GAAR,CAAYC,KAAnE;;AAEAC,oBAAgBC,MAAhB,GAAyB,CACvB,SADuB,EAEvB,QAFuB,EAGvB,cAHuB,EAIvB,SAJuB,EAKvB,gBALuB,EAMvB,kBANuB,EAOvB,iBAPuB,EAQvB,kBARuB,EASvB,gBATuB,EAUvB,cAVuB,CAAzB;;AAaA;AACA,aAASD,eAAT,CAAyBE,kBAAzB,EAA6ChB,IAA7C,EAAkD;;AAE9CjE,qBAAamB,IAAb,CAAkB,IAAlB;;AAEA,aAAK+D,iBAAL,GAAyBjB,KAAKkB,2BAAL,KAAqClB,KAAKmB,2BAAL,GAAmC,IAAInB,KAAKmB,2BAAT,CAAqC,IAArC,CAAnC,GAAgF,EAArH,CAAzB;;AAGA,aAAKnB,IAAL,GAAYA,QAAQ,EAApB;;AAEA,aAAKA,IAAL,CAAUoB,iBAAV,GAA8B,KAAKpB,IAAL,CAAUoB,iBAAV,IAA+BN,gBAAgBM,iBAA7E;AACA,aAAKpB,IAAL,CAAUqB,SAAV,GAAsB,KAAKrB,IAAL,CAAUqB,SAAV,IAAuB,KAAKrB,IAAL,CAAUoB,iBAAV,EAA7C;AACA,aAAKpB,IAAL,CAAUsB,eAAV,GAA4B,KAAKtB,IAAL,CAAUsB,eAAV,IAA6BR,gBAAgBQ,eAAzE,CAX8C,CAW6C;;;AAG3F,YAAIlB,gBAAgB,EAApB;AACAA,sBAAc5K,sBAAd,IAAwC;AACtC+L,mCAAsB,KAAKvB,IAAL,CAAUqB;AADM,SAAxC;AAGAjB,sBAAcoB,KAAd,GAAsBpB,cAAc5K,sBAAd,CAAtB,CAlB8C,CAkBkB;;AAEhE;AACAwK,aAAKE,EAAL,GAAU;AACNC,wBAAaH,KAAKqB,SADZ;AAENjB,2BAAgBA;AAFV,SAAV;;AAMA,YAAIqB,KAAJ;AACA,YAAG,OAAOT,kBAAP,KAA8B,UAAjC,EAA4C;AACxCS,oBAAQ3B,2BAA2BkB,kBAA3B,EAA+ChB,IAA/C,EAAqD,IAArD,CAAR;AACH,SAFD,MAEM,IAAG,QAAOgB,kBAAP,yCAAOA,kBAAP,OAA8B,QAAjC,EAA0C;AAC5CS,oBAAQC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeZ,kBAAf,CAAX,CAAR,CAD4C,CACY;AAC3D,SAFK,MAED;AACD,kBAAM,IAAI9H,KAAJ,CAAU,2EAAV,CAAN;AACH;;AAED,aAAK2I,MAAL,GAAc5L,gBAAgBwL,KAAhB,CAAd;;AAEA,aAAKzB,IAAL,CAAU8B,OAAV,GAAoB9B,KAAK8B,OAAL,KAAiB,OAAOA,OAAP,KAAmB,WAAnB,GAAiC,EAACC,KAAM,eAAU,CAAE,CAAnB,EAAjC,GAAwDD,OAAzE,CAApB,CAtC8C,CAsC2D;AACzG,aAAK9B,IAAL,CAAUxC,GAAV,GAAgB,KAAKwC,IAAL,CAAUxC,GAAV,IAAiBH,QAAjC;AACA,aAAK2C,IAAL,CAAUgC,oBAAV,GAAiC,KAAKhC,IAAL,CAAUgC,oBAAV,IAAkCvC,0CAAnE;AACA,aAAKO,IAAL,CAAUiC,kBAAV,GAA+B,KAAKjC,IAAL,CAAUiC,kBAAV,IAAgClD,6BAA/D;;AAEA,aAAKiB,IAAL,CAAUsB,eAAV,CAA0BvJ,GAA1B,CAA8BmK,OAAO,KAAKlC,IAAL,CAAUqB,SAAjB,CAA9B,EAA2D,IAA3D;;AAEA,aAAKJ,iBAAL,CAAuBc,GAAvB,GAA6B,KAAKd,iBAAL,CAAuBc,GAAvB,IAA+B,SAASA,GAAT,GAAc;AACxE,gBAAG,KAAK/B,IAAL,CAAU8B,OAAV,CAAkBC,GAAlB,CAAsBvJ,KAAzB,EAA+B;AAC7B,qBAAKwH,IAAL,CAAU8B,OAAV,CAAkBC,GAAlB,CAAsBvJ,KAAtB,CAA4B,KAAKwH,IAAL,CAAU8B,OAAtC,EAA+CpF,SAA/C;AACD,aAFD,MAEO;AACL;AACA,qBAAKsD,IAAL,CAAU8B,OAAV,CAAkBC,GAAlB,CAAsBrI,MAAMuC,SAAN,CAAgBgB,KAAhB,CAAsBzE,KAAtB,CAA4BkE,SAA5B,EAAuChF,IAAvC,CAA4C,GAA5C,CAAtB;AACD;AACF,SAP2D,CAO1DmB,IAP0D,CAOrD,IAPqD,CAA5D,CA7C8C,CAoD7B;;AAEjB,aAAKsJ,mBAAL,GAA2B,EAA3B;AACA,aAAKC,mBAAL,GAA2B,EAA3B;;AAEA,YAAGpC,KAAKqC,MAAR,EAAe;AACb,iBAAKR,MAAL,CAAY9K,qBAAZ,CAAkCiJ,KAAKqC,MAAvC,EADa,CACqC;AACnD;;AAED;AACA,YAAGrC,KAAKsC,QAAR,EAAiB;AACf,iBAAKC,cAAL,GAAsB,IAAI,KAAKvC,IAAL,CAAUxC,GAAd,CAAkB8C,mCAAmCN,KAAKsC,QAAL,CAAc,CAAd,CAAnC,EAAqD,KAAKT,MAAL,CAAY5K,aAAjE,CAAlB,CAAtB;AACA,iBAAKuL,aAAL,GAAqBhC,mBAAmBR,KAAKsC,QAAL,CAAc,CAAd,CAAnB,EAAqC,KAAKT,MAAL,CAAY5K,aAAjD,CAArB;AACA,iBAAKwL,eAAL,GAAuBzC,KAAKsC,QAAL,CAAc,CAAd,CAAvB;AACA,iBAAKT,MAAL,CAAY9K,qBAAZ,CAAkCiJ,KAAKsC,QAAL,CAAc,CAAd,CAAlC,EAJe,CAIwC;AACvD,iBAAKF,mBAAL,GAA2BpC,KAAKsC,QAAL,CAAc,CAAd,CAA3B;AACD,SAND,MAMK;AACH,iBAAKC,cAAL,GAAsB,IAAI,KAAKvC,IAAL,CAAUxC,GAAd,EAAtB;AACA,iBAAKgF,aAAL,GAAqB,EAArB;AACA,iBAAKC,eAAL,GAAuB,KAAvB;AACD;;AAED;AACA3B,wBAAgBC,MAAhB,CAAuBhM,OAAvB,CAA+B,UAASkG,KAAT,EAAe;AAC5C,iBAAKiB,EAAL,CAAQjB,KAAR,EAAe,KAAKyH,IAAL,CAAU7J,IAAV,CAAe,IAAf,EAAoBoC,KAApB,CAAf;AACD,SAFD,EAEG,IAFH;AAGH;;AAED;AACA6F,oBAAgB6B,gBAAhB,GAAmC,CAAnC;AACA7B,oBAAgBM,iBAAhB,GAAoC,YAAU;AAC5C,eAAON,gBAAgB6B,gBAAhB,EAAP;AACD,KAFD;AAGA7B,oBAAgBQ,eAAhB,GAAkC,IAAIjL,GAAJ,EAAlC;;AAEAyK,oBAAgB7E,SAAhB,GAA4BxH,OAAOmO,MAAM7G,aAAaE,SAAnB,CAAP,EAAqC;;AAE7D;AACA;AACA4G,gBAAS,kBAAU;AACjB,mBAAO,KAAK7C,IAAL,CAAU8C,aAAjB;AACA,gBAAG,KAAKL,eAAR,EAAyB;AACzB,iBAAKA,eAAL,GAAuB,IAAvB;AACA,iBAAKC,IAAL,wBAA+B,KAAK1C,IAAL,CAAU+C,QAAzC;AACA,iBAAKC,gBAAL,CAAsB,IAAtB;AACD,SAV4D;;AAY7DA,0BAAmB,0BAAS/H,KAAT,EAAe;AAAA;;AAChC;AACA;AACA,iBAAKgI,sBAAL;;AAEA,gBAAIC,eAAe,KAAKC,qBAAL,GAA6BC,IAA7B,CAAkCxD,qCAAlC,CAAnB;;AAEA,iBAAK,IAAI5H,IAAI,CAAR,EAAWC,MAAMiL,aAAahL,MAAnC,EAA2CF,IAAIC,GAA/C,EAAoDD,GAApD,EAAyD;AACrD,oBAAIqL,cAAcH,aAAalL,CAAb,CAAlB;;AAEA,oBAAGqL,YAAYC,MAAZ,KAAuB7M,SAA1B,EAAqC;AACjC,yBAAK,IAAI8M,UAAU,CAAd,EAAiBC,UAAUH,YAAYC,MAAZ,CAAmBpL,MAAnD,EAA2DqL,UAAUC,OAArE,EAA8ED,SAA9E,EAAyF;AACrF,4BAAIE,QAAQJ,YAAYC,MAAZ,CAAmBC,OAAnB,CAAZ;AACA,6BAAK,IAAIG,WAAW,CAAf,EAAkBC,WAAWF,MAAMvL,MAAxC,EAAgDwL,WAAWC,QAA3D,EAAqED,UAArE,EAAiF;AAC7E,gCAAIE,YAAYH,MAAMC,QAAN,CAAhB;AACA,gCAAI;AACFE,0CAAU1G,IAAV,CAAe,KAAK+D,iBAApB,EAAuC,IAAvC;AACD,6BAFD,CAEE,OAAO4C,CAAP,EAAS;AACT,qCAAKC,YAAL,CAAkBD,CAAlB,EAAqBD,SAArB;AACA;AACD;AACJ;AACJ;AACJ;;AAED;AACA,oBAAGP,YAAY/I,OAAf,EAAwB+I,YAAY/I,OAAZ,CAAoBvF,OAApB,CAA6B,kBAAU;AAC7D,0BAAKkM,iBAAL,CAAuB8C,YAAvB,CAAoCxJ,OAAO5D,EAA3C;AACD,iBAFuB;;AAIxB;AACA,oBAAI0M,YAAYjM,KAAZ,KAAsB,OAAtB,IACAiM,YAAY3K,MAAZ,CAAmBtB,KAAnB,KAA6B,OADjC,EACyC;;AAEvC,wBAAG,KAAK4I,IAAL,CAAU8C,aAAb,EAA2B;AACzB,6BAAK7B,iBAAL,CAAuB+C,IAAvB,CAA4B;AAC1B3M,oCAAQ,UADkB;AAE1BO,kCAAM,iBAAiB,KAAKoI,IAAL,CAAU+C,QAFP;AAG1BkB,kCAAOZ,YAAYa,QAAZ,IAAwBb,YAAYa,QAAZ,CAAqBhH,IAArB,CAA0B,KAAK+D,iBAA/B,EAAkDhG,KAAlD;AAHL,yBAA5B;AAKD;;AAED,yBAAK+E,IAAL,CAAUsB,eAAV,CAA0B1D,MAA1B,CAAiC,KAAKoC,IAAL,CAAUqB,SAA3C;AACA,yBAAKtE,IAAL,CAAU,mBAAV,EAA+B9B,KAA/B;AACD;AACJ;AAEF,SA3D4D;;AA6D7D;AACAkJ,eAAQ,iBAAW;AACf,iBAAKC,UAAL;AACA,iBAAKC,eAAL;AACA,mBAAO,KAAKC,gBAAL,EAAP;AACH,SAlE4D;;AAoE7D;;;;;AAKAC,oBAAa,oBAASC,EAAT,EAAa;AACtBA,iBAAK,KAAKJ,UAAL,CAAgBI,EAAhB,CAAL;AACA,iBAAKC,QAAL,CAAc,IAAd,EAAoBD,EAApB;AACH,SA5E4D;;AA8E7DJ,oBAAa,oBAASI,EAAT,EAAY;AAAA;;AACrB,gBAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAC1BA,qBAAKE,GAAL;AACH;;AAED,iBAAKhC,IAAL,CAAU,6BAAV;;AAEA;AACA;AACA;AACA,iBAAKb,MAAL,CAAY9H,UAAZ,CAAuBhF,OAAvB,CAAgC;AAAA,uBAAK,OAAKwN,cAAL,CAAoB9E,GAApB,CAAwBpE,CAAxB,CAAL;AAAA,aAAhC;;AAEA,mBAAOmL,EAAP;AACH,SA3F4D;;AA6F7D;AACAF,0BAAmB,4BAAW;AAC1B,mBAAO,KAAK/B,cAAL,CAAoBtE,IAApB,GAA2B7E,GAA3B,CAA+B,UAASC,CAAT,EAAW;AAAC,uBAAOA,EAAE1C,EAAT;AAAa,aAAxD,CAAP;AACH,SAhG4D;;AAkG7DwM,+BAAwB,iCAAU;AAC9B,mBAAO,KAAKZ,cAAL,CAAoBtE,IAApB,GACC7E,GADD,CACK,UAASC,CAAT,EAAW;AAAE,uBAAO,CAACA,CAAD,EAAIN,MAAJ,CAAWoG,MAAME,YAAN,CAAmBhG,CAAnB,CAAX,CAAP;AAA0C,aAD5D,EAC6D,IAD7D,EAECC,MAFD,CAEQ,UAASC,CAAT,EAAWC,CAAX,EAAa;AAAC,uBAAOD,EAAER,MAAF,CAASS,CAAT,CAAP;AAAoB,aAF1C,EAE2C,EAF3C,GAEmD;AAClDF,kBAHD,CAGQ,UAASC,CAAT,EAAWC,CAAX,EAAa;AAAC,uBAAOD,EAAEkC,OAAF,CAAUjC,CAAV,IAAe,CAAC,CAAhB,GAAoBD,CAApB,GAAwBA,EAAER,MAAF,CAASS,CAAT,CAA/B;AAA4C,aAHlE,EAGmE,EAHnE,CAAP,CAD8B,CAIiD;AAClF,SAvG4D;;AA0G7D;AACAmL,8BAAuB,gCAAW;AAC9B,mBAAO,KAAKxB,qBAAL,GAA6B/J,GAA7B,CAAiC,UAASC,CAAT,EAAW;AAAC,uBAAOA,EAAE1C,EAAT;AAAa,aAA1D,CAAP;AACH,SA7G4D;;AAgH7D;AACA0J,cAAO,cAASuE,SAAT,EAAoB;AACvB,mBAAO,KAAKD,oBAAL,GAA4BlJ,OAA5B,CAAoCmJ,SAApC,IAAiD,CAAC,CAAzD;AACH,SAnH4D;;AAqH7D;AACAC,iBAAU,iBAASD,SAAT,EAAoB;AAC1B,mBAAO,KAAKnC,eAAZ;AACH,SAxH4D;;AA0H7D;AACA4B,yBAAkB,yBAASR,CAAT,EAAY;AAC1B,gBAAIiB,qBAAJ;AAAA,gBAAkBC,kBAAlB;AAAA,gBAA6BC,wBAA7B;AAAA,gBAA8CC,yBAA9C;;AAD0B,gCAEqC,KAAKC,aAAL,CAAmBrB,CAAnB,CAFrC;;AAAA;;AAEzBmB,2BAFyB;AAERC,4BAFQ;AAEUF,qBAFV;AAEqBD,wBAFrB;;;AAI1B,mBAAOC,SAAP,EAAkB;AAAA,4CACY,KAAKI,qCAAL,CAA2CL,YAA3C,EAAyDG,gBAAzD,EAA2ED,eAA3E,CADZ;;AAAA;;AACfF,4BADe;AACDC,yBADC;AAEjB;;AAED,iBAAKK,cAAL,CAAoBN,YAApB,EAAkCG,gBAAlC,EAAoDD,eAApD;AACH,SApI4D;;AAsI7DG,+CAAwC,+CAASL,YAAT,EAAuBG,gBAAvB,EAAyCD,eAAzC,EAAyD;AAC7F;AACA,gBAAIK,sBAAuB,KAAKC,kBAAL,CAAwBR,YAAxB,EAAsC,IAAtC,CAA3B;AACA,gBAAGO,oBAAoBnH,OAApB,EAAH,EAAiC;AAC/B,oBAAIqH,KAAK,KAAKnD,mBAAL,CAAyBoD,KAAzB,EAAT;AACA,oBAAGD,EAAH,EAAM;AACJT,mCAAeS,EAAf;AACAF,0CAAsB,KAAKC,kBAAL,CAAwBR,YAAxB,EAAsC,KAAtC,CAAtB;AACD;AACF;;AAED,gBAAG,CAACO,oBAAoBnH,OAApB,EAAJ,EAAkC;AAChC,qBAAKnB,IAAL,CAAU,kBAAV,EAA8B+H,YAA9B;AACA,oBAAIW,qBAAJ;AAAA,oBAAkBC,sBAAlB;;AAFgC,wCAGA,KAAKC,iBAAL,CAAuBb,YAAvB,EAAqCO,mBAArC,CAHA;;AAAA;;AAG/BI,4BAH+B;AAGjBC,6BAHiB;;AAIhC,oBAAGD,YAAH,EAAiBA,aAAa1Q,OAAb,CAAsB;AAAA,2BAAKiQ,gBAAgBvH,GAAhB,CAAoBpE,CAApB,CAAL;AAAA,iBAAtB;AACjB,oBAAGqM,aAAH,EAAkBA,cAAc3Q,OAAd,CAAuB;AAAA,2BAAKkQ,iBAAiBxH,GAAjB,CAAqBpE,CAArB,CAAL;AAAA,iBAAvB;AAClB,qBAAK0D,IAAL,CAAU,gBAAV,EAA4B+H,YAA5B;AACD;AACD,gBAAIC,YAAY,CAACM,oBAAoBnH,OAApB,EAAD,IAAkC,KAAKkE,mBAAL,CAAyBlK,MAA3E;AACA,mBAAO,CAAC4M,YAAD,EAAeC,SAAf,CAAP;AACH,SA3J4D;;AA6J7DG,uBAAgB,uBAASrB,CAAT,EAAW;AAAA;;AACvB,iBAAK9G,IAAL,CAAU,gBAAV,EAA4B8G,CAA5B;;AAEA;AACA,iBAAKtB,cAAL,CAAoBtE,IAApB,GAA2BlJ,OAA3B,CAAmC,iBAAS;AAC1C,oBAAG+B,MAAMwD,OAAT,EAAkBxD,MAAMwD,OAAN,CAAcvF,OAAd,CAAuB,kBAAW;AAClD,wBAAGwF,OAAOqL,WAAV,EAAsB;AACpB;AACA,+BAAK3E,iBAAL,CAAuB+C,IAAvB,CAA4B;AAC1B3M,2CAAakD,OAAO5D,EADM;AAE1BiB,kCAAMiM,EAAEjM,IAFkB;AAG1BqM,kCAAOJ,EAAEI;AAHiB,yBAA5B;AAKD;AACD,wBAAG1J,OAAO5D,EAAP,KAAckN,EAAEd,QAAnB,EAA4B;AAC1B;AACA,4BAAGxI,OAAOC,QAAV,EAAoBD,OAAOC,QAAP,CAAgBzF,OAAhB,CAAyB;AAAA,mCAAW,OAAK8Q,eAAL,CAAqBhC,CAArB,EAAwBiC,MAAxB,CAAX;AAAA,yBAAzB;AACrB;AACF,iBAbiB;AAcnB,aAfD;;AAiBA,gBAAIjC,CAAJ,EAAO,KAAKzB,mBAAL,CAAyB7J,IAAzB,CAA8BsL,CAA9B;;AAEP,gBAAImB,kBAAkB,IAAIxH,GAAJ,EAAtB;AAAA,gBAAiCyH,mBAAmB,IAAIzH,GAAJ,EAApD;AACA,gBAAIuH,YAAY,IAAhB;AACA,gBAAID,eAAejB,CAAnB;AACA,mBAAO,CAACoB,gBAAD,EAAmBD,eAAnB,EAAoCD,SAApC,EAA+CD,YAA/C,CAAP;AACH,SAxL4D;;AA0L7DM,wBAAiB,wBAASvB,CAAT,EAAYoB,gBAAZ,EAA8BD,eAA9B,EAA+CR,EAA/C,EAAkD;AAAA;;AAC/D,gBAAIuB,iBAAiBrM,MAAM7E,IAAN,CAAW,IAAI2I,GAAJ,CAAQ,6BAAIyH,gBAAJ,GAAsBpL,MAAtB,CAA6B;AAAA,uBAAKR,EAAEiB,OAAF,IAAa,CAAC0K,gBAAgBpO,GAAhB,CAAoByC,CAApB,CAAnB;AAAA,aAA7B,CAAR,CAAX,EAA6F+J,IAA7F,CAAkGvD,gBAAlG,CAArB;;AAEA;AACAkG,2BAAehR,OAAf,CAAwB,aAAK;AACzBsE,kBAAEiB,OAAF,CAAUvF,OAAV,CAAmB;AAAA,2BAAM,OAAK8Q,eAAL,CAAqBhC,CAArB,EAAuBmC,CAAvB,CAAN;AAAA,iBAAnB;AACH,aAFD;;AAIA;AACAhB,4BAAgBjQ,OAAhB,CAAyB,aAAK;AAC5B,oBAAGsE,EAAEiB,OAAL,EAAcjB,EAAEiB,OAAF,CAAUvF,OAAV,CAAmB,kBAAU;AACzC,2BAAKkM,iBAAL,CAAuB8C,YAAvB,CAAoCxJ,OAAO5D,EAA3C;AACD,iBAFa;AAGf,aAJD;;AAMA;AACA;AACA;;AAEA,iBAAK8L,eAAL,GAAuB,KAAKF,cAAL,CAAoBtE,IAApB,GAA2B7D,KAA3B,CAAiC,UAASf,CAAT,EAAW;AAAE,uBAAOA,EAAEL,QAAF,KAAe/D,YAAYM,KAAlC;AAA0C,aAAxF,CAAvB;AACA,gBAAG,KAAKkN,eAAR,EAAwB;AACtB,qBAAKO,gBAAL,CAAsBa,CAAtB;AACD;AACD,iBAAK9G,IAAL,CAAU,cAAV;AACA,gBAAGyH,EAAH,EAAOA,GAAG/N,SAAH,EAAc,KAAK6N,gBAAL,EAAd;AACV,SAnN4D;;AAqN7DrB,gCAAyB,kCAAU;AAAA;AAAA;AAAA;;AAAA;AACjC,sCAA2B,KAAKhC,iBAAL,CAAuBgF,SAAlD,mIAA4D;AAAA,wBAAnDC,cAAmD;;AAC1D,wBAAG,CAACA,eAAeC,WAAf,CAA2BC,KAA/B,EAAsC;AACtC,yBAAK1D,IAAL,CAAU,yBAAV,EAAqCwD,cAArC;AACAG,iCAAaH,eAAeI,aAA5B;AACA,yBAAKrF,iBAAL,CAAuBgF,SAAvB,CAAiCrI,MAAjC,CAAwCsI,cAAxC;AACD;AANgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOjCxR,mBAAOI,IAAP,CAAY,KAAKmM,iBAAL,CAAuBsF,WAAnC,EAAgDxR,OAAhD,CAAwD,UAASyR,GAAT,EAAa;AACnE,uBAAO,KAAKvF,iBAAL,CAAuBsF,WAAvB,CAAmCC,GAAnC,CAAP;AACD,aAFD,EAEG,IAFH;AAGD,SA/N4D;;AAiO7DC,8BAAuB,8BAAS5C,CAAT,EAAYW,EAAZ,EAAgB;AACnC,gBAAIM,qBAAJ;AAAA,gBAAkBC,kBAAlB;AAAA,gBAA6BC,wBAA7B;AAAA,gBAA8CC,yBAA9C;;AADmC,iCAE4B,KAAKC,aAAL,CAAmBrB,CAAnB,CAF5B;;AAAA;;AAElCmB,2BAFkC;AAEjBC,4BAFiB;AAECF,qBAFD;AAEYD,wBAFZ;;;AAInC,qBAAS4B,QAAT,CAAkB3J,IAAlB,EAAuB;AACrB,qBAAKA,IAAL,CAAUA,IAAV;;AADqB,6CAEO,KAAKoI,qCAAL,CAA2CL,YAA3C,EAAyDG,gBAAzD,EAA2ED,eAA3E,CAFP;;AAAA;;AAEpBF,4BAFoB;AAENC,yBAFM;;;AAIrB,oBAAGA,SAAH,EAAa;AACX,yBAAKhI,IAAL,CAAU,kBAAV;AACA4J,iCAAaD,SAAS7N,IAAT,CAAc,IAAd,CAAb,EAAiC,iBAAjC;AACD,iBAHD,MAGK;AACH,yBAAKuM,cAAL,CAAoBN,YAApB,EAAkCG,gBAAlC,EAAoDD,eAApD,EAAqER,EAArE;AACD;AACF;AACDkC,qBAASxJ,IAAT,CAAc,IAAd,EAAmB,gBAAnB;AACH,SAjP4D;;AAmP7D;AACAyI,2BAAoB,2BAASb,YAAT,EAAuBO,mBAAvB,EAA4C;;AAE5D,iBAAK3C,IAAL,CAAU,yCAAV,EAAqDoC,YAArD;;AAEA,iBAAKpC,IAAL,CAAU,sBAAV,EAAkC2C,mBAAlC;;AAEA,gBAAII,qBAAJ;AAAA,gBACIC,sBADJ;;AAGA,gBAAI,CAACL,oBAAoBnH,OAApB,EAAL,EAAoC;;AAEhC;AACA;AACA,oBAAI0I,iCAAiC,IAAI,KAAK5G,IAAL,CAAUxC,GAAd,CAAkB6H,oBAAoBpH,IAApB,GAA2BpE,MAA3B,CAAkCnE,qBAAlC,CAAlB,CAArC;;AAEA+P,+BAAe,KAAKoB,WAAL,CAAiB/B,YAAjB,EAA+B8B,8BAA/B,CAAf;AACA,qBAAKE,mBAAL,CAAyBhC,YAAzB,EAAuCO,mBAAvC;AACAK,gCAAgB,KAAKqB,YAAL,CAAkBjC,YAAlB,EAAgC8B,8BAAhC,CAAhB;;AAEA,qBAAKlE,IAAL,CAAU,oBAAV,EAAgC,KAAKH,cAArC;AACH;;AAED,mBAAO,CAACkD,YAAD,EAAeC,aAAf,CAAP;AACH,SA3Q4D;;AA6Q7DmB,qBAAc,qBAAS/B,YAAT,EAAuB8B,8BAAvB,EAAsD;AAChE,gBAAII,0BAAJ;AAAA,gBAAuBvB,qBAAvB;;AADgE,mCAE5B,KAAKwB,gBAAL,CAAsBL,8BAAtB,CAF4B;;AAAA;;AAE/DI,6BAF+D;AAE5CvB,wBAF4C;;;AAIhE,iBAAK/C,IAAL,CAAU,gBAAV;AACA,iBAAK,IAAI1K,IAAI,CAAR,EAAWC,MAAMwN,aAAavN,MAAnC,EAA2CF,IAAIC,GAA/C,EAAoDD,GAApD,EAAyD;AACrD,oBAAIqL,cAAcoC,aAAazN,CAAb,CAAlB;;AAEA,oBAAGqL,YAAYpK,QAAf,EAAyB,KAAKsJ,cAAL,CAAoB5E,MAApB,CAA2B0F,WAA3B;;AAEzB,qBAAKX,IAAL,CAAU,UAAV,EAAsBW,YAAY1M,EAAlC;;AAEA;AACA,qBAAKoG,IAAL,CAAU,QAAV,EAAmBsG,YAAY1M,EAA/B;;AAEA,oBAAG0M,YAAYC,MAAZ,KAAuB7M,SAA1B,EAAqC;AACjC,yBAAK,IAAI8M,UAAU,CAAd,EAAiBC,UAAUH,YAAYC,MAAZ,CAAmBpL,MAAnD,EAA2DqL,UAAUC,OAArE,EAA8ED,SAA9E,EAAyF;AACrF,4BAAIE,QAAQJ,YAAYC,MAAZ,CAAmBC,OAAnB,CAAZ;AACA,6BAAK,IAAIG,WAAW,CAAf,EAAkBC,WAAWF,MAAMvL,MAAxC,EAAgDwL,WAAWC,QAA3D,EAAqED,UAArE,EAAiF;AAC7E,gCAAIE,YAAYH,MAAMC,QAAN,CAAhB;AACA,gCAAI;AACFE,0CAAU1G,IAAV,CAAe,KAAK+D,iBAApB,EAAuC6D,YAAvC;AACD,6BAFD,CAEE,OAAOjB,CAAP,EAAS;AACT,qCAAKC,YAAL,CAAkBD,CAAlB,EAAqBD,SAArB;AACA;AACD;AACJ;AACJ;AACJ;;AAED,oBAAIoC,CAAJ;AACA,oBAAI3C,YAAYnJ,UAAhB,EAA4B;AAAA;AAAA;AAAA;;AAAA;AACxB,8CAAsBmJ,YAAYnJ,UAAlC,mIAA6C;AAAA,gCAArCA,UAAqC;;AACzC,gCAAIA,WAAWgN,MAAf,EAAuB;AACnBlB,oCAAI,WAASmB,EAAT,EAAa;AACb,2CAAOA,GAAGnO,QAAH,KAAgB/D,YAAYC,KAA5B,IAAqCmO,YAAYlK,WAAZ,CAAwBsC,OAAxB,CAAgC0L,EAAhC,IAAsC,CAAC,CAAnF;AACH,iCAFD;AAGH,6BAJD,MAIO;AACHnB,oCAAI,WAASmB,EAAT,EAAa;AACb,2CAAOA,GAAGzO,MAAH,KAAc2K,WAArB;AACH,iCAFD;AAGH;AACD;AACA,iCAAKb,aAAL,CAAmBtI,WAAWvD,EAA9B,IAAoC8O,aAAa5L,MAAb,CAAoBmM,CAApB,CAApC;AACH;AAbuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc3B;AACJ;;AAED,mBAAOP,YAAP;AACH,SA9T4D;;AAgU7DqB,6BAAsB,6BAAShC,YAAT,EAAuBO,mBAAvB,EAA2C;AAC7D,gBAAI+B,oBAAoB/B,oBAAoBpH,IAApB,GAA2BmF,IAA3B,CAAgCvN,oBAAhC,CAAxB;;AAEA,iBAAK6M,IAAL,CAAU,gCAAV;AACA,iBAAK,IAAI2E,SAAS,CAAb,EAAgBpP,MAAMmP,kBAAkBlP,MAA7C,EAAqDmP,SAASpP,GAA9D,EAAmEoP,QAAnE,EAA6E;AACzE,oBAAI1O,aAAayO,kBAAkBC,MAAlB,CAAjB;;AAEA,oBAAIC,YAAY3O,WAAW/C,OAAX,IAAsB+C,WAAW/C,OAAX,CAAmBwD,GAAnB,CAAuB,UAAS/B,MAAT,EAAgB;AAAC,2BAAOA,OAAOV,EAAd;AAAkB,iBAA1D,CAAtC;;AAEA,qBAAKoG,IAAL,CAAU,cAAV,EAAyBpE,WAAWC,MAAX,CAAkBjC,EAA3C,EAA8C2Q,SAA9C,EAAyD3O,WAAWC,MAAX,CAAkBzC,WAAlB,CAA8BsF,OAA9B,CAAsC9C,UAAtC,CAAzD;;AAEA,oBAAGA,WAAWqC,YAAX,KAA4BvE,SAA/B,EAA0C;AACtC,yBAAK,IAAI8Q,QAAQ,CAAZ,EAAeC,QAAQ7O,WAAWqC,YAAX,CAAwB9C,MAApD,EAA4DqP,QAAQC,KAApE,EAA2ED,OAA3E,EAAoF;AAChF,4BAAI3D,YAAYjL,WAAWqC,YAAX,CAAwBuM,KAAxB,CAAhB;AACA,4BAAI;AACF3D,sCAAU1G,IAAV,CAAe,KAAK+D,iBAApB,EAAuC6D,YAAvC;AACD,yBAFD,CAEE,OAAOjB,CAAP,EAAS;AACT,iCAAKC,YAAL,CAAkBD,CAAlB,EAAqBD,SAArB;AACA;AACD;AACJ;AACJ;AACJ;AAGJ,SAzV4D;;AA2V7DmD,sBAAe,sBAASjC,YAAT,EAAuB8B,8BAAvB,EAAsD;AAAA;;AACjE,iBAAKlE,IAAL,CAAU,iBAAV;;AAEA,gBAAIgD,gBAAgB,IAAIlI,GAAJ,EAApB;AACA,gBAAIiK,wBAAwB,IAAIjK,GAAJ,EAA5B;AACA;AACA,gBAAIkK,wBAAwB,EAA5B;AACA,iBAAKC,gBAAL,CAAsBf,8BAAtB,EAAsDlB,aAAtD,EAAqE+B,qBAArE,EAA4FC,qBAA5F;AACAhC,4BAAgB,6BAAIA,aAAJ,GAAmBtC,IAAnB,CAAwBvD,gBAAxB,CAAhB;;AAEA,iBAAK6C,IAAL,CAAU,gBAAV,EAA4BgD,aAA5B;;AAEA,iBAAK,IAAIkC,WAAW,CAAf,EAAkBC,WAAWnC,cAAcxN,MAAhD,EAAwD0P,WAAWC,QAAnE,EAA6ED,UAA7E,EAAyF;AACrF,oBAAIE,eAAepC,cAAckC,QAAd,CAAnB;;AAEA,oBAAGE,aAAa7O,QAAhB,EAA0B,KAAKsJ,cAAL,CAAoB9E,GAApB,CAAwBqK,YAAxB;;AAE1B,qBAAKpF,IAAL,CAAU,UAAV,EAAsBoF,aAAanR,EAAnC;;AAEA,qBAAKoG,IAAL,CAAU,SAAV,EAAoB+K,aAAanR,EAAjC;;AAEA,oBAAGmR,aAAaC,OAAb,KAAyBtR,SAA5B,EAAuC;AACnC,yBAAK,IAAIuR,WAAW,CAAf,EAAkBC,WAAWH,aAAaC,OAAb,CAAqB7P,MAAvD,EAA+D8P,WAAWC,QAA1E,EAAoFD,UAApF,EAAgG;AAC5F,4BAAIvE,QAAQqE,aAAaC,OAAb,CAAqBC,QAArB,CAAZ;AACA,6BAAK,IAAItE,WAAW,CAAf,EAAkBC,WAAWF,MAAMvL,MAAxC,EAAgDwL,WAAWC,QAA3D,EAAqED,UAArE,EAAiF;AAC7E,gCAAIE,YAAYH,MAAMC,QAAN,CAAhB;AACA,gCAAI;AACFE,0CAAU1G,IAAV,CAAe,KAAK+D,iBAApB,EAAuC6D,YAAvC;AACD,6BAFD,CAEE,OAAOjB,CAAP,EAAS;AACT,qCAAKC,YAAL,CAAkBD,CAAlB,EAAqBD,SAArB;AACA;AACD;AACJ;AACJ;AACJ;;AAED,oBAAG6D,sBAAsB7Q,GAAtB,CAA0BkR,YAA1B,CAAH,EAA2C;AAAA;AAAA;AAAA;;AAAA;AACvC,8CAAwBA,aAAa/N,UAArC,mIAAgD;AAAA,gCAAxCY,YAAwC;;AAC5C,iCAAKoC,IAAL,CAAU,gBAAV,EAA4BpC,aAAahE,EAAzC;AACA,gCAAGgE,aAAa3B,QAAb,KAA0B/D,YAAYK,OAAzC,EAAiD;AAC7C,oCAAIqD,aAAagC,aAAaxE,WAAb,CAAyB,CAAzB,CAAjB;AACA,oCAAGwC,WAAWqC,YAAX,KAA4BvE,SAA/B,EAA0C;AACtC,yCAAKiM,IAAL,CAAU,wEAAV,EAAmFoF,aAAanR,EAAhG;AACA,yCAAK,IAAI4Q,QAAQ,CAAZ,EAAeC,QAAQ7O,WAAWqC,YAAX,CAAwB9C,MAApD,EAA4DqP,QAAQC,KAApE,EAA2ED,OAA3E,EAAoF;AAChF,4CAAI3D,aAAYjL,WAAWqC,YAAX,CAAwBuM,KAAxB,CAAhB;AACA,4CAAI;AACF3D,uDAAU1G,IAAV,CAAe,KAAK+D,iBAApB,EAAuC6D,YAAvC;AACD,yCAFD,CAEE,OAAOjB,CAAP,EAAS;AACT,iDAAKC,YAAL,CAAkBD,CAAlB,EAAqBD,UAArB;AACA;AACD;AACJ;AACJ;AACJ;AACJ;AAlBsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB1C;;AAGD,oBAAG8D,sBAAsBI,aAAanR,EAAnC,CAAH,EAA0C;AACtC,wBAAIgC,cAAa+O,sBAAsBI,aAAanR,EAAnC,CAAjB;AACA,wBAAGgC,YAAWqC,YAAX,KAA4BvE,SAA/B,EAA0C;AACtC,6BAAKiM,IAAL,CAAU,wEAAV,EAAmFoF,aAAanR,EAAhG;AACA,6BAAK,IAAI4Q,QAAQ,CAAZ,EAAeC,QAAQ7O,YAAWqC,YAAX,CAAwB9C,MAApD,EAA4DqP,QAAQC,KAApE,EAA2ED,OAA3E,EAAoF;AAChF,gCAAI3D,cAAYjL,YAAWqC,YAAX,CAAwBuM,KAAxB,CAAhB;AACA,gCAAI;AACF3D,4CAAU1G,IAAV,CAAe,KAAK+D,iBAApB,EAAuC6D,YAAvC;AACD,6BAFD,CAEE,OAAOjB,CAAP,EAAS;AACT,qCAAKC,YAAL,CAAkBD,CAAlB,EAAqBD,WAArB;AACA;AACD;AACJ;AACJ;AACJ;AACJ;;AAED,iBAAK,IAAIgE,WAAW,CAAf,EAAkBC,WAAWnC,cAAcxN,MAAhD,EAAwD0P,WAAWC,QAAnE,EAA6ED,UAA7E,EAAyF;AACrF,oBAAIE,eAAepC,cAAckC,QAAd,CAAnB;AACA,oBAAGE,aAAa9O,QAAb,KAA0B/D,YAAYM,KAAzC,EAA+C;AAC7C,wBAAImD,SAASoP,aAAapP,MAA1B;AACA,wBAAIwP,cAAcxP,OAAOA,MAAzB;AACA,yBAAK0J,mBAAL,CAAyB7J,IAAzB,CAA8B,EAACX,MAAO,gBAAgBc,OAAO/B,EAA/B,EAAmCsN,MAAO6D,aAAa5D,QAAb,IAAyB4D,aAAa5D,QAAb,CAAsBhH,IAAtB,CAA2B,KAAK+D,iBAAhC,EAAmD6D,YAAnD,CAAnE,EAA9B;AACA,wBAAGoD,eAAeA,YAAYlP,QAAZ,KAAyB/D,YAAYG,QAAvD,EAAgE;AAC5D,4BAAG8S,YAAY/Q,MAAZ,CAAmBiD,KAAnB,CAAyB;AAAA,mCAAK,OAAK+N,cAAL,CAAoB9O,CAApB,CAAL;AAAA,yBAAzB,CAAH,EAA0D;AACtD,iCAAK+I,mBAAL,CAAyB7J,IAAzB,CAA8B,EAACX,MAAO,gBAAgBsQ,YAAYvR,EAApC,EAA9B;AACH;AACJ;AACF;AACJ;;AAED,mBAAO+O,aAAP;AACH,SArb4D;;AAub7DyC,wBAAiB,wBAAS9O,CAAT,EAAW;AAAA;;AACxB,gBAAGA,EAAEL,QAAF,KAAe/D,YAAYE,SAA9B,EAAwC;AACpC,uBAAOkE,EAAElC,MAAF,CAAS0H,IAAT,CAAc;AAAA,2BAAKxF,EAAEL,QAAF,KAAe/D,YAAYM,KAA3B,IAAoC,OAAKgN,cAAL,CAAoBvE,QAApB,CAA6B3E,CAA7B,CAAzC;AAAA,iBAAd,CAAP;AACH,aAFD,MAEM,IAAGA,EAAEL,QAAF,KAAe/D,YAAYG,QAA9B,EAAuC;AACzC,uBAAOiE,EAAElC,MAAF,CAASiD,KAAT,CAAe,KAAK+N,cAAL,CAAoBtP,IAApB,CAAyB,IAAzB,CAAf,CAAP;AACH,aAFK,MAED;AACD,uBAAO,KAAP;AACH;AACJ,SA/b4D;;AAic7D;AACAgN,yBAAkB,yBAASf,YAAT,EAAuBlB,SAAvB,EAAkC;AAChD,gBAAI;AACF,uBAAOA,UAAU1G,IAAV,CAAe,KAAK+D,iBAApB,EAAuC6D,YAAvC,CAAP,CADE,CAC+D;AAClE,aAFD,CAEE,OAAOjB,CAAP,EAAS;AACT,qBAAKC,YAAL,CAAkBD,CAAlB,EAAqBD,SAArB;AACD;AACJ,SAxc4D;;AA0c7DE,sBAAe,sBAASD,CAAT,EAAYD,SAAZ,EAAsB;AACnC,gBAAI3I,QACF4I,aAAa3K,KAAb,IAAuB,OAAO2K,EAAEuE,SAAF,CAAYxQ,IAAnB,KAA4B,QAA5B,IAAwCiM,EAAEuE,SAAF,CAAYxQ,IAAZ,CAAiByQ,KAAjB,CAAuB,WAAvB,CAA/D,GAAuG;AACrG;AACEzQ,sBAAK,iBADP;AAEEqM,sBAAO;AACLqE,6BAAS1E,UAAU0E,OADd;AAELC,0BAAM3E,UAAU2E,IAFX;AAGLC,4BAAQ5E,UAAU4E,MAHb;AAILC,4BAAQ5E,EAAE6E;AAJL,iBAFT;AAQElS,sBAAO;AART,aADF,GAWGqN,EAAEjM,IAAF,GACCiM,CADD,GAEC;AACEjM,sBAAK,iBADP;AAEEqM,sBAAKJ,CAFP;AAGErN,sBAAO;AAHT,aAdN;AAoBA,iBAAK4L,mBAAL,CAAyB7J,IAAzB,CAA8B0C,KAA9B;AACA,iBAAK8B,IAAL,CAAU,SAAV,EAAqB9B,KAArB;AACD,SAje4D;;AAme7D;AACAgM,0BAAmB,0BAAS9Q,WAAT,EAAsB;AACrC,gBAAIsP,eAAe,IAAI,KAAKzF,IAAL,CAAUxC,GAAd,EAAnB;AACA,gBAAIwJ,oBAAoB,IAAI,KAAKhH,IAAL,CAAUxC,GAAd,EAAxB;;AAEA;AACA;AACA;AACA;AACA,gBAAImL,iBAAiBxS,YAAY8H,IAAZ,EAArB;AACA,iBAAK,IAAIsJ,QAAQ,CAAZ,EAAeC,QAAQmB,eAAezQ,MAA3C,EAAmDqP,QAAQC,KAA3D,EAAkED,OAAlE,EAA2E;AACvE,oBAAI5O,aAAagQ,eAAepB,KAAf,CAAjB;AACA,oBAAIjM,QAAQ3C,WAAW2C,KAAvB;AAAA,oBACIsN,OAAOtN,MAAMnC,WADjB;;AAGA;AACA;AACA;AACA,oBAAI0P,aAAa,KAAKtG,cAAL,CAAoBtE,IAApB,EAAjB;AACA,qBAAK,IAAI6K,SAAS,CAAb,EAAgBC,SAASF,WAAW3Q,MAAzC,EAAiD4Q,SAASC,MAA1D,EAAkED,QAAlE,EAA4E;AACxE,wBAAIhS,QAAQ+R,WAAWC,MAAX,CAAZ;AACA,wBAAGF,KAAKnN,OAAL,CAAa3E,KAAb,IAAsB,CAAC,CAA1B,EAA4B;AACxBkQ,0CAAkBvJ,GAAlB,CAAsB3G,KAAtB;AACA2O,qCAAahI,GAAb,CAAiB3G,KAAjB;AACA,4BAAIsB,YAAY+G,MAAME,YAAN,CAAmBvI,KAAnB,EAAyBwE,KAAzB,CAAhB;AACA,6BAAK,IAAI0N,SAAS,CAAb,EAAgBC,SAAS7Q,UAAUF,MAAxC,EAAgD8Q,SAASC,MAAzD,EAAiED,QAAjE,EAA2E;AACvEvD,yCAAahI,GAAb,CAAiBrF,UAAU4Q,MAAV,CAAjB;AACH;AACJ;AACJ;AACJ;;AAED,gBAAIE,qBAAqBzD,aAAaxH,IAAb,GAAoBmF,IAApB,CAAyBxD,qCAAzB,CAAzB;AACA,mBAAO,CAACoH,iBAAD,EAAoBkC,kBAApB,CAAP;AACH,SArgB4D;;AAugB7DvB,0BAAmB,0BAASxR,WAAT,EAAsBgT,aAAtB,EAAqC1B,qBAArC,EAA4DC,qBAA5D,EAAkF;AAAA;AAAA;AAAA;;AAAA;AACnG,sCAAavR,YAAY8H,IAAZ,EAAb,mIAAgC;AAAA,wBAAxBtI,CAAwB;AAAA;AAAA;AAAA;;AAAA;AAC5B,8CAAaA,EAAEC,OAAf,mIAAuB;AAAA,gCAAfyD,CAAe;;AACnB,iCAAK+P,2BAAL,CAAiC/P,CAAjC,EAAmC8P,aAAnC,EAAkD1B,qBAAlD,EAAyEC,qBAAzE;AACH;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI5B,wBAAI2B,WAAW1T,EAAE2F,KAAjB;AAJ4B;AAAA;AAAA;;AAAA;AAK5B,8CAAa,KAAKgO,yBAAL,CAA+B3T,CAA/B,CAAb,mIAA+C;AAAA,gCAAvC0D,EAAuC;;AAC3C,iCAAKkQ,yBAAL,CAA+BlQ,EAA/B,EAAkCgQ,QAAlC,EAA4CF,aAA5C,EAA2D1B,qBAA3D,EAAkFC,qBAAlF;AACH;AAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ/B;AATkG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUpG,SAjhB4D;;AAmhB7D4B,mCAA4B,mCAAS3Q,UAAT,EAAoB;AAC9C,gBAAI/C,UAAU,IAAI4H,GAAJ,EAAd;AAD8C;AAAA;AAAA;;AAAA;AAE9C,uCAAa7E,WAAW/C,OAAxB,wIAAgC;AAAA,wBAAxByD,CAAwB;;AAC5B,wBAAGA,EAAEL,QAAF,KAAe/D,YAAYI,OAA9B,EAAsC;AAClC,4BAAGgE,EAAE1C,EAAF,IAAQ,KAAK6L,aAAhB,EACI,KAAKA,aAAL,CAAmBnJ,EAAE1C,EAArB,EAAyB5B,OAAzB,CAAkC;AAAA,mCAASa,QAAQ6H,GAAR,CAAY3G,KAAZ,CAAT;AAAA,yBAAlC,EADJ,KAGI,6BAAI,KAAKwS,yBAAL,CAA+BjQ,EAAElD,WAAF,CAAc,CAAd,CAA/B,CAAJ,GAAsDpB,OAAtD,CAA+D;AAAA,mCAASa,QAAQ6H,GAAR,CAAY3G,KAAZ,CAAT;AAAA,yBAA/D;AACP,qBALD,MAKO;AACHlB,gCAAQ6H,GAAR,CAAYpE,CAAZ;AACH;AACJ;AAX6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAY9C,mBAAOzD,OAAP;AACD,SAhiB4D;;AAkiB7DwT,qCAA8B,qCAAStS,KAAT,EAAeqS,aAAf,EAA8B1B,qBAA9B,EAAqDC,qBAArD,EAA2E;AAAA;;AACvG,gBAAG5Q,MAAMkC,QAAN,KAAmB/D,YAAYI,OAAlC,EAA0C;AACtC,oBAAG,KAAKmN,aAAL,CAAmB1L,MAAMH,EAAzB,CAAH,EAAgC;AAAA;AAAA;AAAA;;AAAA;AAC5B,+CAAa,KAAK6L,aAAL,CAAmB1L,MAAMH,EAAzB,CAAb;AAAA,gCAAQ0C,CAAR;;AACI,iCAAK+P,2BAAL,CAAiC/P,CAAjC,EAAmC8P,aAAnC,EAAkD1B,qBAAlD,EAAyEC,qBAAzE;AADJ;AAD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAI5B,+CAAa,KAAKlF,aAAL,CAAmB1L,MAAMH,EAAzB,CAAb;AAAA,gCAAQ0C,GAAR;;AACI,iCAAKkQ,yBAAL,CAA+BlQ,GAA/B,EAAkCvC,MAAM4B,MAAxC,EAAgDyQ,aAAhD,EAA+D1B,qBAA/D,EAAsFC,qBAAtF;AADJ;AAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM/B,iBAND,MAMO;AACLA,0CAAsB5Q,MAAM4B,MAAN,CAAa/B,EAAnC,IAAyCG,MAAMX,WAAN,CAAkB,CAAlB,CAAzC;AADK;AAAA;AAAA;;AAAA;AAEL,+CAAaW,MAAMX,WAAN,CAAkB,CAAlB,EAAqBP,OAAlC;AAAA,gCAAQyD,GAAR;;AACI,iCAAK+P,2BAAL,CAAiC/P,GAAjC,EAAmC8P,aAAnC,EAAiD1B,qBAAjD,EAAwEC,qBAAxE;AADJ;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAKL,+CAAa5Q,MAAMX,WAAN,CAAkB,CAAlB,EAAqBP,OAAlC;AAAA,gCAAQyD,GAAR;;AACI,iCAAKkQ,yBAAL,CAA+BlQ,GAA/B,EAAkCvC,MAAM4B,MAAxC,EAAgDyQ,aAAhD,EAA+D1B,qBAA/D,EAAsFC,qBAAtF;AADJ;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQN;AACJ,aAhBD,MAgBO;AACHyB,8BAAc1L,GAAd,CAAkB3G,KAAlB;AACA,oBAAGA,MAAMkC,QAAN,KAAmB/D,YAAYE,SAAlC,EAA4C;AACxCsS,0CAAsBhK,GAAtB,CAA0B3G,KAA1B;AACA;AAFwC;AAAA;AAAA;;AAAA;AAGxC,+CAAaA,MAAMiD,UAAnB,wIAA8B;AAAA,gCAAtBV,GAAsB;;AAC1B,gCAAIzD,UAAUyD,IAAEL,QAAF,KAAe/D,YAAYK,OAA3B,GAAqC+D,IAAElD,WAAF,CAAc,CAAd,EAAiBP,OAAtD,GAAgE,CAACyD,GAAD,CAA9E;AAD0B;AAAA;AAAA;;AAAA;AAE1B,uDAAuBzD,OAAvB,wIAA+B;AAAA,wCAAvB4T,WAAuB;;AAC7B,yCAAKJ,2BAAL,CAAiCI,WAAjC,EAA6CL,aAA7C,EAA4D1B,qBAA5D,EAAmFC,qBAAnF;AACD;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK7B;AARuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AASxC,+CAAa5Q,MAAMiD,UAAnB,wIAA8B;AAAA,gCAAtBV,GAAsB;;AAC1B,gCAAIzD,WAAUyD,IAAEL,QAAF,KAAe/D,YAAYK,OAA3B,GAAqC+D,IAAElD,WAAF,CAAc,CAAd,EAAiBP,OAAtD,GAAgE,CAACyD,GAAD,CAA9E;AAD0B;AAAA;AAAA;;AAAA;AAE1B,uDAAuBzD,QAAvB,wIAA+B;AAAA,wCAAvB4T,YAAuB;;AAC7B,yCAAKD,yBAAL,CAA+BC,YAA/B,EAA4C1S,KAA5C,EAAmDqS,aAAnD,EAAkE1B,qBAAlE,EAAyFC,qBAAzF;AACD;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK7B;AAduC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAe3C,iBAfD,MAeK;AACD,wBAAG5Q,MAAMkC,QAAN,KAAmB/D,YAAYG,QAAlC,EAA2C;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAC/B0E,KAD+B;;AAEnC,oCAAG,CAAC,6BAAIqP,aAAJ,GAAmBtK,IAAnB,CAAwB;AAAA,2CAAKM,MAAMC,YAAN,CAAmB/F,CAAnB,EAAsBS,KAAtB,CAAL;AAAA,iCAAxB,CAAJ,EAA+D;AAC3D,2CAAKsP,2BAAL,CAAiCtP,KAAjC,EAAuCqP,aAAvC,EAAsD1B,qBAAtD,EAA6EC,qBAA7E;AACH;AAJkC;;AACvC,mDAAiB5Q,MAAMK,MAAvB,wIAA8B;AAAA;AAI7B;AALsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM1C;AACJ;AACJ;AACF,SA9kB4D;;AAglB7DoS,mCAA4B,mCAASzS,KAAT,EAAgBuS,QAAhB,EAA0BF,aAA1B,EAAyC1B,qBAAzC,EAAgEC,qBAAhE,EAAsF;AAAA;;AAChH,gBAAIvP,WAAW,SAAXA,QAAW,CAAC0D,GAAD,EAAS;AACpB,oBAAGA,IAAI7C,QAAJ,KAAiB/D,YAAYG,QAAhC,EAAyC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,gCAC7B0E,KAD6B;;AAEjC,gCAAGA,MAAMd,QAAN,KAAmB/D,YAAYI,OAA/B,IAA0C,CAAC,6BAAI8T,aAAJ,GAAmBtK,IAAnB,CAAwB;AAAA,uCAAKM,MAAMC,YAAN,CAAmB/F,CAAnB,EAAsBS,KAAtB,CAAL;AAAA,6BAAxB,CAA9C,EAAyG;AACrG,uCAAKsP,2BAAL,CAAiCtP,KAAjC,EAAuCqP,aAAvC,EAAsD1B,qBAAtD,EAA6EC,qBAA7E;AACH;AAJgC;;AACrC,+CAAiB7L,IAAI1E,MAArB,wIAA4B;AAAA;AAI3B;AALoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxC;AACJ,aARD;AADgH;AAAA;AAAA;;AAAA;AAUhH,uCAAegI,MAAME,YAAN,CAAmBvI,KAAnB,EAAyBuS,QAAzB,CAAf,wIAAkD;AAAA,wBAA1CxN,GAA0C;;AAC9CsN,kCAAc1L,GAAd,CAAkB5B,GAAlB;AACA1D,6BAAS0D,GAAT;AACH;AAb+G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAchH1D,qBAASkR,QAAT;AACD,SA/lB4D;;AAimB7D;AACA/D,4BAAqB,4BAASR,YAAT,EAAuB7F,0BAAvB,EAAmD;AACpE,gBAAIgD,qBAAqB,KAAKjC,IAAL,CAAUiC,kBAAnC;AACA,gBAAIwH,qBAAqB,IAAI,KAAKzJ,IAAL,CAAUxC,GAAd,EAAzB;;AAEA,gBAAIqG,IAAI,KAAKgC,eAAL,CAAqBhN,IAArB,CAA0B,IAA1B,EAA+BiM,YAA/B,CAAR;;AAEA,gBAAI4E,eAAe,KAAKnH,cAAL,CAAoBtE,IAApB,GAA2BmF,IAA3B,CAAgCvN,oBAAhC,CAAnB;AANoE;AAAA;AAAA;;AAAA;AAOpE,uCAAiB6T,YAAjB,wIAA8B;AAAA,wBAAtB5S,KAAsB;AAAA;AAAA;AAAA;;AAAA;AAC1B6S,4BAD0B,EACpB,uBAAa,CAAC7S,KAAD,EAAQiC,MAAR,CAAeoG,MAAME,YAAN,CAAmBvI,KAAnB,CAAf,CAAb,wIAAuD;AAAA,gCAA/CuC,CAA+C;AAAA;AAAA;AAAA;;AAAA;AACzD,uDAAaA,EAAElD,WAAf,wIAA2B;AAAA,wCAAnBR,CAAmB;;AACvB,wCAAGsM,mBAAmBtM,CAAnB,EAAsBmP,YAAtB,EAAoCjB,CAApC,EAAuC5E,0BAAvC,CAAH,EAAsE;AAClEwK,2DAAmBhM,GAAnB,CAAuB9H,CAAvB;AACA,8CAAMgU,IAAN;AACH;AACJ;AANwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO5D;AARyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS7B;AAhBmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBpE,gBAAIC,6BAA6B,KAAKC,4BAAL,CAAkCJ,kBAAlC,CAAjC;;AAEA,iBAAK/G,IAAL,CAAU,4BAAV,EAAwCkH,0BAAxC;;AAEA,mBAAOA,0BAAP;AACH,SAznB4D;;AA4nB7DE,yBAAkB,yBAAS3T,WAAT,EAAsB;AACtC,gBAAI+M,eAAe,IAAI1F,GAAJ,EAAnB;AADsC;AAAA;AAAA;;AAAA;AAEtC,uCAAarH,WAAb,wIAAyB;AAAA,wBAAjBR,CAAiB;;AACrB,wBAAGA,EAAEC,OAAL,EAAa;AACT,4BAAI0F,QAAQ3F,EAAE2F,KAAd;AADS;AAAA;AAAA;;AAAA;AAET,mDAAa,KAAK6H,qBAAL,EAAb,wIAA0C;AAAA,oCAAlC9J,CAAkC;;AACtC,oCAAG8F,MAAMC,YAAN,CAAmB/F,CAAnB,EAAqBiC,KAArB,CAAH,EAAgC4H,aAAazF,GAAb,CAAiBpE,CAAjB;AACnC;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKZ;AACJ;AATqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUtC,mBAAO6J,YAAP;AACD,SAvoB4D;;AA0oB7D;AACA2G,sCAA+B,sCAASJ,kBAAT,EAA6B;AAAA;;AAC1D,gBAAIM,sBAAsB,IAAI,KAAK/J,IAAL,CAAUxC,GAAd,EAA1B;AACA;AAF0D;AAAA;AAAA;;AAAA;AAG1D,uCAAeiM,mBAAmBxL,IAAnB,EAAf,wIAAyC;AAAA,wBAAhCnI,EAAgC;;AACrC,wBAAIkU,cAAc,KAAlB;AACA,wBAAIC,sBAAsB,IAAIzM,GAAJ,EAA1B;AAFqC;AAAA;AAAA;;AAAA;AAAA;AAAA,gCAG5BzH,EAH4B;;AAIjC;AACA,gCAAImU,YAAY,OAAKJ,eAAL,CAAqB,CAAChU,EAAD,CAArB,CAAhB;AACA,gCAAIqU,YAAY,OAAKL,eAAL,CAAqB,CAAC/T,EAAD,CAArB,CAAhB;AACA,gCAAIqU,kBAAkB,6BAAIF,SAAJ,GAAerL,IAAf,CAAqB;AAAA,uCAAKsL,UAAUvT,GAAV,CAAcyC,CAAd,CAAL;AAAA,6BAArB,KAAiD,6BAAI8Q,SAAJ,GAAetL,IAAf,CAAqB;AAAA,uCAAKqL,UAAUtT,GAAV,CAAcyC,CAAd,CAAL;AAAA,6BAArB,CAAvE;AACA,mCAAKqJ,IAAL,CAAU,WAAV,EAAsB5M,GAAG8C,MAAH,CAAUjC,EAAhC,EAAmC,6BAAIuT,SAAJ,GAAe9Q,GAAf,CAAoB;AAAA,uCAAKC,EAAE1C,EAAP;AAAA,6BAApB,CAAnC;AACA,mCAAK+L,IAAL,CAAU,WAAV,EAAsB3M,GAAG6C,MAAH,CAAUjC,EAAhC,EAAmC,6BAAIwT,SAAJ,GAAe/Q,GAAf,CAAoB;AAAA,uCAAKC,EAAE1C,EAAP;AAAA,6BAApB,CAAnC;AACA,mCAAK+L,IAAL,CAAU,iBAAV,EAA4B0H,eAA5B;AACA,gCAAGA,eAAH,EAAmB;AACf,oCAAGrU,GAAG6C,MAAH,CAAUO,WAAV,CAAsBsC,OAAtB,CAA8B3F,GAAG8C,MAAjC,IAA2C,CAAC,CAA/C,EAAiD;AAAK;AAClDqR,wDAAoBxM,GAApB,CAAwB1H,EAAxB;AACH,iCAFD,MAEK;AACDiU,kDAAc,IAAd;AACA;AACH;AACJ;AAlBgC;;AAGrC,+CAAeD,oBAAoB9L,IAApB,EAAf,wIAA0C;AAAA;;AAAA,mDAa9B;AAGX;AAnBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBrC,wBAAG,CAAC+L,WAAJ,EAAgB;AAAA;AAAA;AAAA;;AAAA;AACZ,mDAAcC,mBAAd,wIAAkC;AAAA,oCAA1BI,EAA0B;;AAC9BN,oDAAoBpM,MAApB,CAA2B0M,EAA3B;AACH;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIZN,4CAAoBtM,GAApB,CAAwB3H,EAAxB;AACH;AACJ;AA7ByD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA+B1D,mBAAOiU,mBAAP;AACD,SA3qB4D;;AA6qB7DrH,cAAO,gBAAU;AACf,gBAAGrK,UAAH,EAAc;AACZ,oBAAIoE,OAAO/C,MAAM7E,IAAN,CAAW6H,SAAX,CAAX;AACA,qBAAKsD,IAAL,CAAU8B,OAAV,CAAkBC,GAAlB,CACKtF,KAAK,CAAL,CADL,UAEIA,KAAKQ,KAAL,CAAW,CAAX,EAAc7D,GAAd,CAAkB,UAASkR,GAAT,EAAa;AAC7B,2BAAOA,QAAQ,IAAR,GAAe,MAAf,GACHA,QAAQ7T,SAAR,GAAoB,WAApB,GACE,OAAO6T,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GACEA,IAAIhS,QAAJ,OAAmB,iBAAnB,GAAuC9D,KAAK+V,OAAL,CAAaD,GAAb,CAAvC,GAA2DA,IAAIhS,QAAJ,EAHnE;AAKD,iBAND,EAMGZ,IANH,CAMQ,IANR,CAFJ;AAWD;AACF,SA5rB4D;;AA8rB7D;;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA8S,0BAAmB,0BAASpO,QAAT,EAAkB;AACjC0E,4BAAgBC,MAAhB,CAAuBhM,OAAvB,CAA+B,UAASkG,KAAT,EAAe;AAC5C,oBAAGmB,SAASnB,KAAT,CAAH,EAAoB,KAAKiB,EAAL,CAAQjB,KAAR,EAAcmB,SAASnB,KAAT,CAAd;AACrB,aAFD,EAEG,IAFH;AAGH,SAxtB4D;;AA0tB7D;AACAwP,4BAAqB,4BAASrO,QAAT,EAAkB;AACnC0E,4BAAgBC,MAAhB,CAAuBhM,OAAvB,CAA+B,UAASkG,KAAT,EAAe;AAC5C,oBAAGmB,SAASnB,KAAT,CAAH,EAAoB,KAAK0B,GAAL,CAAS1B,KAAT,EAAemB,SAASnB,KAAT,CAAf;AACrB,aAFD,EAEG,IAFH;AAGH,SA/tB4D;;AAiuB7D;AACAyP,gCAAyB,kCAAU;AAC/B,gBAAIjT,SAAS,EAAb;AACA,qBAASkT,SAAT,CAAmB7T,KAAnB,EAAyB;;AAErB,oBAAGA,MAAMX,WAAT,EAAqB;AACjB,yBAAK,IAAIoR,QAAQ,CAAZ,EAAeC,QAAQ1Q,MAAMX,WAAN,CAAkB+B,MAA9C,EAAsDqP,QAAQC,KAA9D,EAAqED,OAArE,EAA8E;AAC1E9P,+BAAOX,MAAMX,WAAN,CAAkBoR,KAAlB,EAAyBtM,KAAhC,IAAyC,IAAzC;AACH;AACJ;;AAED,oBAAGnE,MAAMK,MAAT,EAAiB;AACb,yBAAK,IAAIyT,WAAW,CAAf,EAAkBC,WAAW/T,MAAMK,MAAN,CAAae,MAA/C,EAAuD0S,WAAWC,QAAlE,EAA4ED,UAA5E,EAAwF;AACpFD,kCAAU7T,MAAMK,MAAN,CAAayT,QAAb,CAAV;AACH;AACJ;AACJ;;AAEDD,sBAAU,KAAK9I,MAAf;;AAEA,mBAAOnN,OAAOI,IAAP,CAAY2C,MAAZ,CAAP;AACH,SAtvB4D;;AAyvB7D;AACA;;;;;;;;;;;;;;AAeAqT,qBAAc,uBAAU;AACtB,mBAAO,CACL,KAAKxG,gBAAL,EADK,EAEL,KAAKyG,iBAAL,EAFK,EAGL,KAAKtI,eAHA,EAIL,KAAKZ,MAAL,CAAY7K,mBAAZ,EAJK,EAKL,KAAKoL,mBAAL,CAAyBnF,KAAzB,EALK,CAAP;AAOD,SAjxB4D;;AAmxB7D8N,2BAAoB,6BAAU;AAC5B,gBAAIxN,IAAI,EAAR;AACA7I,mBAAOI,IAAP,CAAY,KAAK0N,aAAjB,EAAgCzN,OAAhC,CAAwC,UAAS2L,GAAT,EAAa;AACnDnD,kBAAEmD,GAAF,IAAS,KAAK8B,aAAL,CAAmB9B,GAAnB,EAAwBtH,GAAxB,CAA4B,UAAStC,KAAT,EAAe;AAAC,2BAAOA,MAAMH,EAAb;AAAgB,iBAA5D,CAAT;AACD,aAFD,EAEE,IAFF;AAGA,mBAAO4G,CAAP;AACD;AAzxB4D,KAArC,CAA5B;;AA4xBA;;;;AAIA,aAASyN,UAAT,CAAoBvJ,KAApB,EAA2BzB,IAA3B,EAAiC;AAC7BA,eAAOA,QAAQ,EAAf;;AAEAA,aAAKmB,2BAAL,GAAmCnB,KAAKmB,2BAAL,IAAoCA,2BAAvE;;AAEA,aAAK8J,WAAL,GAAmB,KAAnB;;AAEAnK,wBAAgB5D,IAAhB,CAAqB,IAArB,EAA0BuE,KAA1B,EAAgCzB,IAAhC,EAP6B,CAOc;;AAE3CkL,eAAOC,OAAP,CAAepO,IAAf,CAAoB,KAApB,EAA0B,IAA1B;AACH;;AAED,aAAS6F,KAAT,CAAerF,CAAf,EAAiB;AACb,iBAAS6N,CAAT,GAAY,CAAE;AACdA,UAAEnP,SAAF,GAAcsB,CAAd;AACA,eAAO,IAAI6N,CAAJ,EAAP;AACH;;AAED;;;AAGA,aAAS1G,GAAT,GAAe,CAAE;;AAEjB;AACA;AACAsG,eAAW/O,SAAX,GAAuB2G,MAAM9B,gBAAgB7E,SAAtB,CAAvB;;AAEA;AACA+O,eAAW/O,SAAX,CAAqBoP,GAArB,GAA2B,UAASC,YAAT,EAAsBC,YAAtB,EAAoC;;AAE3D,YAAIzG,YAAJ;AACA,uBAAcwG,YAAd,yCAAcA,YAAd;AACI,iBAAK,QAAL;AACIxG,+BAAe,EAAClN,MAAO0T,YAAR,EAAsBrH,MAAOsH,YAA7B,EAAf;AACA;AACJ,iBAAK,QAAL;AACI,oBAAG,OAAOD,aAAa1T,IAApB,KAA6B,QAAhC,EAAyC;AACrCkN,mCAAewG,YAAf;AACH,iBAFD,MAEK;AACD,0BAAM,IAAIpS,KAAJ,CAAU,wDAAV,CAAN;AACH;AACD;AACJ;AACI,sBAAM,IAAIA,KAAJ,CAAU,mDAAV,CAAN;AAZR;;AAeA,YAAG,KAAK+R,WAAR,EAAqB,MAAM,IAAI/R,KAAJ,CAAU,mCAAV,CAAN;;AAErB;AACA,aAAK+R,WAAL,GAAmB,IAAnB;;AAEA,aAAK5G,eAAL,CAAqBS,YAArB;;AAEA,aAAKmG,WAAL,GAAmB,KAAnB;AACA,eAAO,KAAK3G,gBAAL,EAAP;AACH,KA3BD;;AA6BA;;;;;;;;AAQA0G,eAAW/O,SAAX,CAAqBwI,QAArB,GAAgC,UAASK,YAAT,EAAuBN,EAAvB,EAA2B;AACvD,YAAIM,iBAAiB,IAAjB,KAA0B,QAAOA,YAAP,yCAAOA,YAAP,OAAwB,QAAxB,IAAoC,CAACA,YAArC,IAAqD,OAAOA,aAAalN,IAApB,KAA6B,QAA5G,CAAJ,EAA2H;AACvH,kBAAM,IAAIsB,KAAJ,CAAU,2DAAV,CAAN;AACH;;AAED,YAAI,OAAOsL,EAAP,KAAc,UAAlB,EAA8B;AAC1BA,iBAAKE,GAAL;AACH;;AAED,aAAKvC,mBAAL,CAAyB5J,IAAzB,CAA8B,CAACuM,YAAD,EAAeN,EAAf,CAA9B;;AAEA;AACA,iBAASkC,QAAT,CAAkB7C,CAAlB,EAAqB2H,CAArB,EAAuB;AACrB,iBAAK/E,oBAAL,CAA0B5C,CAA1B,EAA6B,UAAS4H,GAAT,EAAcC,MAAd,EAAsB;AAC/CF,kBAAEC,GAAF,EAAOC,MAAP;;AAEA,oBAAG,KAAKvJ,mBAAL,CAAyBjK,MAA5B,EAAmC;AACjCwO,6BAASlO,KAAT,CAAe,IAAf,EAAoB,KAAK2J,mBAAL,CAAyBqD,KAAzB,EAApB;AACD,iBAFD,MAEK;AACH,yBAAKyF,WAAL,GAAmB,KAAnB;AACD;AACJ,aAR4B,CAQ3BpS,IAR2B,CAQtB,IARsB,CAA7B;AASD;AACD,YAAG,CAAC,KAAKoS,WAAT,EAAqB;AACnB,iBAAKA,WAAL,GAAmB,IAAnB;AACAvE,qBAASlO,KAAT,CAAe,IAAf,EAAoB,KAAK2J,mBAAL,CAAyBqD,KAAzB,EAApB;AACD;AACJ,KA3BD;;AA6BA,aAASrE,2BAAT,CAAqClB,WAArC,EAAkD;AAC9C,aAAK0L,YAAL,GAAoB1L,WAApB;AACA,aAAKsG,WAAL,GAAmB,EAAnB;AACA,aAAKqF,UAAL,GAAkB,EAAlB;AACA,aAAK3F,SAAL,GAAiB,IAAIzI,GAAJ,EAAjB;AACH;;AAED;AACA;AACA;AACA,QAAIqO,mBAAmB,oNAAvB;;AAEA;AACA1K,gCAA4BlF,SAA5B,GAAwC;AACpC6P,+BAAyB,UADW;AAEpCC,8BAAwB,gBAFY;AAGpCC,eAAQ,eAAS/Q,KAAT,EAAe;AACnB,iBAAKgR,2BAAL,CAAiChR,KAAjC,EAAwC,IAAxC;AACA,iBAAK0Q,YAAL,CAAkBvJ,mBAAlB,CAAsC7J,IAAtC,CAA2C0C,KAA3C;AACH,SANmC;AAOpCiR,6BAAsB,6BAASC,SAAT,EAAmB;AACvC,mBAAO,CAAC,KAAKR,YAAL,CAAkB3L,IAAlB,CAAuBoM,SAAvB,IAAoCjL,4BAA4BiL,SAAjE,EAA4EzK,KAA5E,CAAkFwK,SAAlF,CAAP;AACD,SATmC;AAUpC5R,gBAAS,gBAAS8R,SAAT,EAAmB;AAAA;;AAC1B;AACA,iBAAKT,UAAL,CAAgBS,UAAU1V,EAA1B,IAAgC,IAAI2V,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/D,iBAAC,QAAKb,YAAL,CAAkB3L,IAAlB,CAAuByM,QAAvB,IAAmCtL,4BAA4BsL,QAAhE,EAA0EJ,UAAU7V,IAApF,EAA0F,QAAKmV,YAA/F,EAA6GU,SAA7G,EAAwH,UAACZ,GAAD,EAAMiB,OAAN,EAAkB;AACxI,wBAAGjB,GAAH,EAAQ,OAAOe,OAAOf,GAAP,CAAP;;AAER,4BAAKE,YAAL,CAAkB5O,IAAlB,CAAuB,6BAAvB,EAAsD2P,OAAtD;AACAH,4BAAQG,OAAR;AACD,iBALD;AAMD,aAP+B,CAAhC;AAQD,SApBmC;AAqBpC3I,sBAAe,sBAAShB,QAAT,EAAkB;AAAA;;AAC/B;AACA,gBAAI4J,iBAAiB,KAAKf,UAAL,CAAgB7I,QAAhB,CAArB;AACA,iBAAK4I,YAAL,CAAkBjJ,IAAlB,uCAA2DK,QAA3D;AACA,gBAAG4J,cAAH,EAAkB;AAChB,qBAAKhB,YAAL,CAAkBjJ,IAAlB;AACAiK,+BAAeC,IAAf,CACG,UAACF,OAAD,EAAa;AACZ,4BAAKf,YAAL,CAAkBjJ,IAAlB,uBAA2CK,QAA3C;AACA2J,4BAAQ7J,MAAR;AACA;AACA,2BAAO,QAAK+I,UAAL,CAAgB7I,QAAhB,CAAP;AACD,iBANH,EAOI,UAAC0I,GAAD,EAAS;AACT;AACD,iBATH;AAUD;AACF,SAtCmC;AAuCpCQ,qCAA8B,qCAAShR,KAAT,EAAe4R,UAAf,EAA0B;AACtD,gBAAG,CAACA,UAAJ,EAAe;AACb5R,sBAAM6R,MAAN,GAAe,KAAKnB,YAAL,CAAkB3L,IAAlB,CAAuBE,EAAvB,CAA0BE,aAA1B,CAAwCoB,KAAxC,CAA8CD,QAA7D,CADa,CAC8D;AAC3EtG,sBAAM8R,UAAN,GAAmB9R,MAAMzE,IAAN,IAAchB,sBAAjC;AACD;AACD,gBAAG,OAAOyF,MAAMzE,IAAb,KAAsB,WAAzB,EAAqC;AACnCyE,sBAAMzE,IAAN,GAAaqW,aAAa,UAAb,GAA0B,UAAvC;AACD;AACD,aACE,MADF,EAEE,QAFF,EAGE,UAHF,EAIE,MAJF,EAKE,QALF,EAME,YANF,EAOE9X,OAPF,CAOU,gBAAQ;AAChB,oBAAG,OAAOkG,MAAMd,IAAN,CAAP,KAAuB,WAA1B,EAAsC;AACpCc,0BAAMd,IAAN,IAAc1D,SAAd;AACD;AACF,aAXD;AAYD,SA3DmC;AA4DpCuN,cAAO,cAAS/I,KAAT,EAAgB+R,OAAhB,EAAwB;AAC3B,iBAAKrB,YAAL,CAAkBjJ,IAAlB,CAAuB,YAAvB,EAAqCzH,KAArC,EAA4C+R,OAA5C;AACAA,sBAAUA,WAAW,EAArB;AACA,gBAAIC,WAAWD,QAAQxW,IAAR,IAAgBhB,sBAA/B;AACA;AACA,qBAAS0X,YAAT,CAAsBjS,KAAtB,EAA6B+R,OAA7B,EAAsCG,UAAtC,EAAiD;AAC/C,oBAAGlS,MAAM5D,MAAT,EAAgB;AACd,wBAAI+V,mBAAmBvB,iBAAiBwB,IAAjB,CAAsBpS,MAAM5D,MAA5B,CAAvB;AACA,wBAAG,CAAC+V,gBAAJ,EAAqB;AACnB,8BAAM,EAAExV,MAAO,iBAAT,EAA4BqM,MAAM,yBAAlC,EAA6DqJ,QAAQrS,MAAMqS,MAA3E,EAAmF9W,MAAO,UAA1F,EAAN;AACD;AACF;AACD,oBAAIyW,aAAazX,sBAAjB,EAAyC;AAAG;AACxC,0BAAM,EAAEoC,MAAO,iBAAT,EAA4BqM,MAAM,kCAAlC,EAAsEqJ,QAAQrS,MAAMqS,MAApF,EAA4F9W,MAAO,UAAnG,EAAN;AACH;;AAED2W,2BAAWjQ,IAAX,CAAgB,IAAhB,EAAsBjC,KAAtB,EAA6B+R,OAA7B;AACD;;AAED,qBAASO,iBAAT,CAA4BtS,KAA5B,EAAmC+R,OAAnC,EAA4C;AAAA;;AAE1C,oBAAI,OAAOQ,UAAP,KAAsB,WAA1B,EAAwC,MAAM,IAAItU,KAAJ,CAAU,0GAAV,CAAN;;AAExC,oBAAImP,KAAJ;AACA,oBAAGpN,MAAM5D,MAAN,KAAiB,YAApB,EAAiC;AAC/B,yBAAK2U,KAAL,CAAW/Q,KAAX;AACD,iBAFD,MAEK;AACH,yBAAKgR,2BAAL,CAAiChR,KAAjC,EAAwC,KAAxC;AACAA,0BAAM8R,UAAN,GAAmBvX,sBAAnB,CAFG,CAE6C;AACA;AAChD,wBAAG,CAACyF,MAAM5D,MAAV,EAAiB;AACfoW,+BAAOvQ,IAAP,CAAY,IAAZ,EAAkB,KAAKyO,YAAvB;AACD,qBAFD,MAEM,IAAG1Q,MAAM5D,MAAN,KAAiB,UAApB,EAA+B;AACnC,4BAAG,KAAKsU,YAAL,CAAkB3L,IAAlB,CAAuB8C,aAA1B,EAAwC;AACtC7H,kCAAM8H,QAAN,GAAiB,KAAK4I,YAAL,CAAkB3L,IAAlB,CAAuB+C,QAAxC;AACA0K,mCAAOvQ,IAAP,CAAY,IAAZ,EAAkB,KAAKyO,YAAL,CAAkB3L,IAAlB,CAAuB8C,aAAzC;AACD,yBAHD,MAGK;AACH,kCAAM,EAAElL,MAAO,qBAAT,EAAgCqM,MAAM,8BAAtC,EAAsEqJ,QAAQrS,MAAMqS,MAApF,EAA4F9W,MAAO,UAAnG,EAAN;AACD;AACF,qBAPK,MAOC,IAAG6R,QAAQpN,MAAM5D,MAAN,CAAagR,KAAb,CAAmB,KAAK0D,oBAAxB,CAAX,EAAyD;AAC9D,4BAAI2B,kBAAkBrF,MAAM,CAAN,CAAtB;AACA,4BAAIqE,UAAU,KAAKf,YAAL,CAAkB3L,IAAlB,CAAuBsB,eAAvB,CAAuC1G,GAAvC,CAA2C8S,eAA3C,CAAd;AACA,4BAAGhB,OAAH,EAAW;AACTe,mCAAOvQ,IAAP,CAAY,IAAZ,EAAiBwP,OAAjB;AACD,yBAFD,MAEM;AACJ,kCAAM,EAAC9U,MAAO,qBAAR,EAA+B0V,QAAQrS,MAAMqS,MAA7C,EAAqD9W,MAAO,UAA5D,EAAN;AACD;AACF,qBARM,MAQD,IAAG6R,QAAQpN,MAAM5D,MAAN,CAAagR,KAAb,CAAmB,KAAKyD,qBAAxB,CAAX,EAA0D;AAC9D;AACA,4BAAI6B,WAAWtF,MAAM,CAAN,CAAf;AACA,6BAAKuD,UAAL,CAAgB+B,QAAhB,EAA0Bf,IAA1B,CAAgC,UAACF,OAAD,EAAa;AAC3Ce,mCAAOvQ,IAAP,UAAiBwP,OAAjB;AACD,yBAFD;AAGD,qBANK,MAMC;AACL,8BAAM,IAAIxT,KAAJ,CAAU,2BAAV,CAAN,CADK,CACyC;AAC/C;AACF;;AAED,yBAASuU,MAAT,CAAgBf,OAAhB,EAAwB;AACtB;AACA;AACA;AACA,wBAAIpG,gBAAgBkH,WAAW,YAAU;AACvC,4BAAIvS,MAAMqS,MAAV,EAAkB,OAAO,KAAK/G,WAAL,CAAiBtL,MAAMqS,MAAvB,CAAP;AAClB,6BAAKrH,SAAL,CAAerI,MAAf,CAAsBsI,cAAtB;AACA,4BAAG,KAAKyF,YAAL,CAAkB3L,IAAlB,CAAuByN,MAA1B,EAAiC;AAC/B,iCAAK9B,YAAL,CAAkB3L,IAAlB,CAAuByN,MAAvB,CAA8Bf,OAA9B,EAAuCzR,KAAvC;AACD,yBAFD,MAEK;AACHyR,oCAAQ,KAAKf,YAAL,CAAkB3L,IAAlB,CAAuB4N,SAAvB,GAAmC,UAAnC,GAAgD,KAAxD,EAA+D3S,KAA/D;AACD;AACF,qBAR8B,CAQ7BpC,IAR6B,CAQxB,IARwB,CAAX,EAQNmU,QAAQ5G,KAAR,IAAiB,CARX,CAApB;;AAUA,wBAAIF,iBAAiB;AACnBC,qCAAc6G,OADK;AAEnB1G,uCAAgBA;AAFG,qBAArB;AAIA,wBAAIrL,MAAMqS,MAAV,EAAkB,KAAK/G,WAAL,CAAiBtL,MAAMqS,MAAvB,IAAiChH,aAAjC;AAClB,yBAAKL,SAAL,CAAexI,GAAf,CAAmByI,cAAnB;AACD;AACF;;AAED,qBAAS2H,OAAT,GAAkB;AAChB,qBAAKlC,YAAL,CAAkB5O,IAAlB,CAAuB9B,MAAMrD,IAA7B,EAAkCqD,MAAMgJ,IAAxC;AACD;;AAED;AACA;AACA,gBAAI6J,MAAJ;AACA,gBAAG7S,MAAMzE,IAAN,KAAe,0CAAlB,EAA6D;AAC3DsX,yBAASD,OAAT;AACD,aAFD,MAEM,IAAG,KAAKlC,YAAL,CAAkB3L,IAAlB,CAAuB+N,UAA1B,EAAqC;AACzCD,yBAAS,KAAKnC,YAAL,CAAkB3L,IAAlB,CAAuB+N,UAAhC;AACD,aAFK,MAED;AACHD,yBAASP,iBAAT;AACD;;AAEDP,sBAAQA,WAAW,EAAnB;;AAEA,iBAAKrB,YAAL,CAAkBjJ,IAAlB,CAAuB,eAAvB,EAAwCzH,MAAMrD,IAA9C,EAAoD,cAApD,EAAoEqD,MAAMgJ,IAA1E,EAAgF,aAAhF,EAA+F+I,QAAQ5G,KAAvG;;AAEA8G,yBAAahQ,IAAb,CAAkB,IAAlB,EAAwBjC,KAAxB,EAA+B+R,OAA/B,EAAwCc,MAAxC;AACH,SAjKmC;AAkKpCjL,gBAAS,gBAASyK,MAAT,EAAgB;AACrB,gBAAG,KAAK3B,YAAL,CAAkB3L,IAAlB,CAAuBgO,YAA1B,EAAwC;AACpC,uBAAO,KAAKrC,YAAL,CAAkB3L,IAAlB,CAAuBgO,YAAvB,CAAoCxV,KAApC,CAA0C,IAA1C,EAAgD,CAAC8U,MAAD,CAAhD,CAAP;AACH;;AAED,gBAAI,OAAOjH,YAAP,KAAwB,WAA5B,EAA0C,MAAM,IAAInN,KAAJ,CAAU,4GAAV,CAAN;;AAE1C,gBAAIoU,UAAU,KAAK/G,WAAnB,EAAgC;AAC5B,qBAAKoF,YAAL,CAAkBjJ,IAAlB,CAAuB,aAAvB,EAAsC4K,MAAtC,EAA8C,mBAA9C,EAAmE,KAAK/G,WAAL,CAAiB+G,MAAjB,CAAnE;AACAjH,6BAAa,KAAKE,WAAL,CAAiB+G,MAAjB,CAAb;AACH;AACJ;AA7KmC,KAAxC;;AAgLApC,WAAOC,OAAP,GAAiB1W,OAAO,IAAIsH,YAAJ,EAAP,EAAwB;AACrC;AACA+E,yBAAiBA,eAFoB;AAGrC;AACAkK,oBAAYA,UAJyB;AAKrC;AACA3N,kBAAWA,QAN0B;AAOrC;AACApI,qBAAcA,WARuB;AASrC;AACAgB,yBAAkBA,eAVmB;AAWrC;AACAkL,qCAA8BA;AAZO,KAAxB,CAAjB","file":"scion.js","sourcesContent":["//   Copyright 2012-2012 Jacob Beard, INFICON, and other SCION contributors\n//\n//   Licensed under the Apache License, Version 2.0 (the \"License\");\n//   you may not use this file except in compliance with the License.\n//   You may obtain a copy of the License at\n//\n//       http://www.apache.org/licenses/LICENSE-2.0\n//\n//   Unless required by applicable law or agreed to in writing, software\n//   distributed under the License is distributed on an \"AS IS\" BASIS,\n//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//   See the License for the specific language governing permissions and\n//   limitations under the License.\n\n\"use strict\";\n\nvar util = require('util');\n\nvar extend = Object.assign || \n    function (to, from){\n      Object.keys(from).forEach(function(k){\n        to[k] = from[k]; \n      });\n      return to;\n    };\n\nvar STATE_TYPES = {\n    BASIC: 0,\n    COMPOSITE: 1,\n    PARALLEL: 2,\n    HISTORY: 3,\n    INITIAL: 4,\n    FINAL: 5\n};\n\nconst SCXML_IOPROCESSOR_TYPE = 'http://www.w3.org/TR/scxml/#SCXMLEventProcessor'\nconst HTTP_IOPROCESSOR_TYPE = 'http://www.w3.org/TR/scxml/#BasicHTTPEventProcessor'\n\nfunction transitionWithTargets(t){\n    return t.targets;\n}\n\nfunction transitionComparator(t1, t2) {\n    return t1.documentOrder - t2.documentOrder;\n}\n\nfunction initializeModel(rootState){\n    var transitions = [], idToStateMap = new Map(), documentOrder = 0;\n\n\n    //TODO: need to add fake ids to anyone that doesn't have them\n    //FIXME: make this safer - break into multiple passes\n    var idCount = {};\n\n    function generateId(type){\n        if(idCount[type] === undefined) idCount[type] = 0;\n\n        do {\n          var count = idCount[type]++;\n          var id = '$generated-' + type + '-' + count; \n        } while (idToStateMap.has(id))\n        \n        return id;\n    }\n\n    function wrapInFakeRootState(state){\n        return {\n            $deserializeDatamodel : state.$deserializeDatamodel || function(){},\n            $serializeDatamodel : state.$serializeDatamodel || function(){ return null;},\n            $idToStateMap : idToStateMap,   //keep this for handy deserialization of serialized configuration\n            docUrl : state.docUrl,\n            states : [\n                {\n                    $type : 'initial',\n                    transitions : [{\n                        target : state\n                    }]\n                },\n                state\n            ]\n        };\n    }\n\n    var statesWithInitialAttributes = [];\n\n    function transitionToString(sourceState){\n      return `${sourceState} -- ${this.events ? '(' + this.events.join(',') + ')' : null}${this.cond ? '[' + this.cond.name + ']' : ''} --> ${this.targets ? this.targets.join(',') : null}`;\n    }\n\n    function stateToString(){\n      return this.id;\n    }\n\n    function populateStateIdMap(state){\n      //populate state id map\n      if(state.id){\n          idToStateMap.set(state.id, state);\n      }\n\n      if(state.states) {\n          for (var j = 0, len = state.states.length; j < len; j++) {\n              populateStateIdMap(state.states[j]);\n          }\n      }\n    }\n\n    function traverse(ancestors,state){\n\n        if(printTrace) state.toString = stateToString;\n\n        //add to global transition and state id caches\n        if(state.transitions) transitions.push.apply(transitions,state.transitions);\n\n        //create a default type, just to normalize things\n        //this way we can check for unsupported types below\n        state.$type = state.$type || 'state';\n\n        //add ancestors and depth properties\n        state.ancestors = ancestors;\n        state.depth = ancestors.length;\n        state.parent = ancestors[0];\n        state.documentOrder = documentOrder++; \n\n        //add some information to transitions\n        state.transitions = state.transitions || [];\n        for (var j = 0, len = state.transitions.length; j < len; j++) {\n            var transition = state.transitions[j];\n            transition.documentOrder = documentOrder++; \n            transition.source = state;\n            if(printTrace) transition.toString = transitionToString.bind(transition, state);\n        };\n\n        //recursive step\n        if(state.states) {\n            var ancs = [state].concat(ancestors);\n            for (var j = 0, len = state.states.length; j < len; j++) {\n                traverse(ancs, state.states[j]);\n            }\n        }\n\n        //setup fast state type\n        switch(state.$type){\n            case 'parallel':\n                state.typeEnum = STATE_TYPES.PARALLEL;\n                state.isAtomic = false;\n                break;\n            case 'initial' : \n                state.typeEnum = STATE_TYPES.INITIAL;\n                state.isAtomic = true;\n                break;\n            case 'history' :\n                state.typeEnum = STATE_TYPES.HISTORY;\n                state.isAtomic = true;\n                break;\n            case 'final' : \n                state.typeEnum = STATE_TYPES.FINAL;\n                state.isAtomic = true;\n                break;\n            case 'state' : \n            case 'scxml' :\n                if(state.states && state.states.length){\n                    state.typeEnum = STATE_TYPES.COMPOSITE;\n                    state.isAtomic = false;\n                }else{\n                    state.typeEnum = STATE_TYPES.BASIC;\n                    state.isAtomic = true;\n                }\n                break;\n            default :\n                throw new Error('Unknown state type: ' + state.$type);\n        }\n\n        //descendants property on states will now be populated. add descendants to this state\n        if(state.states){\n            state.descendants = state.states.concat(state.states.map(function(s){return s.descendants;}).reduce(function(a,b){return a.concat(b);},[]));\n        }else{\n            state.descendants = [];\n        }\n\n        var initialChildren;\n        if(state.typeEnum === STATE_TYPES.COMPOSITE){\n            //set up initial state\n            \n            if(Array.isArray(state.initial) || typeof state.initial === 'string'){\n                statesWithInitialAttributes.push(state);\n            }else{\n                //take the first child that has initial type, or first child\n                initialChildren = state.states.filter(function(child){\n                    return child.$type === 'initial';\n                });\n\n                state.initialRef = [initialChildren.length ? initialChildren[0] : state.states[0]];\n                checkInitialRef(state);\n            }\n\n        }\n\n        //hook up history\n        if(state.typeEnum === STATE_TYPES.COMPOSITE ||\n                state.typeEnum === STATE_TYPES.PARALLEL){\n\n            var historyChildren = state.states.filter(function(s){\n                return s.$type === 'history';\n            }); \n\n           state.historyRef = historyChildren;\n        }\n\n        //now it's safe to fill in fake state ids\n        if(!state.id){\n            state.id = generateId(state.$type);\n            idToStateMap.set(state.id, state);\n        }\n\n        //normalize onEntry/onExit, which can be single fn or array, or array of arrays (blocks)\n        ['onEntry','onExit'].forEach(function(prop){\n          if (state[prop]) {\n            if(!Array.isArray(state[prop])){\n              state[prop] = [state[prop]];\n            }\n            if(!state[prop].every(function(handler){ return Array.isArray(handler); })){\n              state[prop] = [state[prop]];\n            }\n          }\n        });\n\n        if (state.invokes && !Array.isArray(state.invokes)) {\n            state.invokes = [state.invokes];\n            state.invokes.forEach( invoke => {\n              if (invoke.finalize && !Array.isArray(invoke.finalize)) {\n                invoke.finalize = [invoke.finalize];\n              }\n            })\n        }\n    }\n\n    //TODO: convert events to regular expressions in advance\n\n    function checkInitialRef(state){\n      if(!state.initialRef) throw new Error('Unable to locate initial state for composite state: ' + state.id);\n    }\n    function connectIntialAttributes(){\n      for (var j = 0, len = statesWithInitialAttributes.length; j < len; j++) {\n        var s = statesWithInitialAttributes[j];\n\n        var initialStates = Array.isArray(s.initial) ? s.initial : [s.initial];\n        s.initialRef = initialStates.map(function(initialState){ return idToStateMap.get(initialState); });\n        checkInitialRef(s);\n      }\n    }\n\n    var RX_WHITESPACE = /\\s+/;\n\n    function connectTransitionGraph(){\n        //normalize as with onEntry/onExit\n        for (var i = 0, len = transitions.length; i < len; i++) {\n            var t = transitions[i];\n            if (t.onTransition && !Array.isArray(t.onTransition)) {\n                t.onTransition = [t.onTransition];\n            }\n\n            //normalize \"event\" attribute into \"events\" attribute\n            if (typeof t.event === 'string') {\n                t.events = t.event.trim().split(RX_WHITESPACE);\n            }\n            delete t.event;\n\n            if(t.targets || (typeof t.target === 'undefined')) {\n                //targets have already been set up\n                continue;\n            }   \n\n            if(typeof t.target === 'string'){\n                var target = idToStateMap.get(t.target);\n                if(!target) throw new Error('Unable to find target state with id ' + t.target);\n                t.target = target;\n                t.targets = [t.target];\n            }else if(Array.isArray(t.target)){\n                t.targets = t.target.map(function(target){\n                    if(typeof target === 'string'){\n                        target = idToStateMap.get(target);\n                        if(!target) throw new Error('Unable to find target state with id ' + t.target);\n                        return target;\n                    }else{\n                        return target;\n                    } \n                }); \n            }else if(typeof t.target === 'object'){\n                t.targets = [t.target];\n            }else{\n                throw new Error('Transition target has unknown type: ' + t.target);\n            }\n        }\n\n        //hook up LCA - optimization\n        for (var i = 0, len = transitions.length; i < len; i++) {\n            var t = transitions[i];\n            if(t.targets) t.lcca = getLCCA(t.source,t.targets[0]);    //FIXME: we technically do not need to hang onto the lcca. only the scope is used by the algorithm\n\n            t.scope = getScope(t);\n        }\n    }\n\n    function getScope(transition){\n        //Transition scope is normally the least common compound ancestor (lcca).\n        //Internal transitions have a scope equal to the source state.\n        var transitionIsReallyInternal = \n                transition.type === 'internal' &&\n                  transition.source.typeEnum === STATE_TYPES.COMPOSITE &&   //is transition source a composite state\n                  transition.source.parent &&    //root state won't have parent\n                  transition.targets && //does it target its descendants\n                  transition.targets.every(\n                      function(target){ return transition.source.descendants.indexOf(target) > -1;});\n\n        if(!transition.targets){\n            return null;\n        }else if(transitionIsReallyInternal){\n            return transition.source; \n        }else{\n            return transition.lcca;\n        }\n    }\n\n    function getLCCA(s1, s2) {\n        var commonAncestors = [];\n        for (var j = 0, len = s1.ancestors.length; j < len; j++) {\n            var anc = s1.ancestors[j];\n            if((anc.typeEnum === STATE_TYPES.COMPOSITE || anc.typeEnum === STATE_TYPES.PARALLEL) &&\n                anc.descendants.indexOf(s2) > -1){\n                commonAncestors.push(anc);\n            }\n        };\n        if(!commonAncestors.length) throw new Error(\"Could not find LCA for states.\");\n        return commonAncestors[0];\n    }\n\n    //main execution starts here\n    //FIXME: only wrap in root state if it's not a compound state\n    populateStateIdMap(rootState);\n    var fakeRootState = wrapInFakeRootState(rootState);  //I wish we had pointer semantics and could make this a C-style \"out argument\". Instead we return him\n    traverse([],fakeRootState);\n    connectTransitionGraph();\n    connectIntialAttributes();\n\n    return fakeRootState;\n}\n\n/* begin tiny-events: https://github.com/ZauberNerd/tiny-events */\nfunction EventEmitter() {\n    this._listeners = {};\n    this._listeners['*'] = [];\n}\n\nEventEmitter.prototype.on = function _on(type, listener) {\n    if (!Array.isArray(this._listeners[type])) {\n        this._listeners[type] = [];\n    }\n\n    if (this._listeners[type].indexOf(listener) === -1) {\n        this._listeners[type].push(listener);\n    }\n\n    return this;\n};\n\nEventEmitter.prototype.once = function _once(type, listener) {\n    var self = this;\n\n    function __once() {\n        for (var args = [], i = 0; i < arguments.length; i += 1) {\n            args[i] = arguments[i];\n        }\n\n        self.off(type, __once);\n        listener.apply(self, args);\n    }\n\n    __once.listener = listener;\n\n    return this.on(type, __once);\n};\n\nEventEmitter.prototype.off = function _off(type, listener) {\n\n    if(typeof type === 'undefined'){\n        Object.keys(this._listeners).forEach(function(type){\n          for (var i = 0; i < this._listeners[type].length; i += 1) {\n              if (this._listeners[type][i].listener === listener) {\n                  index = i;\n                  break;\n              }\n          }\n        }, this);\n        return this;\n    }\n\n    if (!Array.isArray(this._listeners[type])) {\n        return this;\n    }\n\n    if (typeof listener === 'undefined') {\n        this._listeners[type] = [];\n        return this;\n    }\n\n    var index = this._listeners[type].indexOf(listener);\n\n    if (index === -1) {\n        for (var i = 0; i < this._listeners[type].length; i += 1) {\n            if (this._listeners[type][i].listener === listener) {\n                index = i;\n                break;\n            }\n        }\n    }\n\n    this._listeners[type].splice(index, 1);\n    return this;\n};\n\nEventEmitter.prototype.emit = function _emit(type) {\n\n    var args = Array.prototype.slice.call(arguments);\n    var modifiedArgs = args.slice(1);\n\n    var listeners = this._listeners[type];\n    var j, len;\n    if (Array.isArray(listeners)) {\n      for (j = 0, len = listeners.length; j < len; j++) {\n        listeners[j].apply(this, modifiedArgs);\n      }\n    }\n\n    //special '*' event\n    listeners = this._listeners['*'];\n    for (j = 0, len = listeners.length; j < len; j++) {\n        listeners[j].apply(this, args);\n    }\n\n    return this;\n};\n\n/* end tiny-events */\n\n/* begin ArraySet */\n\n/** @constructor */\nfunction ArraySet(l) {\n    l = l || [];\n    this.o = new Set(l);        \n}\n\nArraySet.prototype = {\n\n    add : function(x) {\n        this.o.add(x);\n    },\n\n    remove : function(x) {\n        return this.o.delete(x);\n    },\n\n    union : function(l) {\n        for (var v of l.o) {\n            this.o.add(v);\n        }\n        return this;\n    },\n\n    difference : function(l) {\n        for (var v of l.o) {\n            this.o.delete(v);\n        }\n        return this;\n    },\n\n    contains : function(x) {\n        return this.o.has(x);\n    },\n\n    iter : function() {\n        return Array.from(this.o);\n    },\n\n    isEmpty : function() {\n        return !this.o.size;\n    },\n\n    size: function() {\n        return this.o.size;\n    },\n\n    equals : function(s2) {\n        if (this.o.size !== s2.size()) {\n            return false;\n        }\n\n        for (var v of this.o) {\n            if (!s2.contains(v)) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    toString : function() {\n        return this.o.size === 0 ? '<empty>' : Array.from(this.o).join(',\\n');\n    }\n};\n\nconst RX_TRAILING_WILDCARD = /\\.\\*$/;\n\nfunction isEventPrefixMatch(prefix, fullName) {\n    prefix = prefix.replace(RX_TRAILING_WILDCARD, '');\n\n    if (prefix === fullName) {\n        return true;\n    }\n\n    if (prefix.length > fullName.length) {\n        return false;\n    }\n\n    if (fullName.charAt(prefix.length) !== '.') {\n        return false;\n    }\n\n    return (fullName.indexOf(prefix) === 0);\n}\n\nfunction isTransitionMatch(t, eventName) {\n    return t.events.some((tEvent) => {\n        return tEvent === '*' || isEventPrefixMatch(tEvent, eventName);\n    });\n}\n\nfunction scxmlPrefixTransitionSelector(t, event, evaluator, selectEventlessTransitions) {\n    return ( \n      selectEventlessTransitions ? \n        !t.events :\n        (t.events && event && event.name && isTransitionMatch(t, event.name))\n      )\n      && (!t.cond || evaluator(t.cond));\n}\n\nfunction eventlessTransitionSelector(state){\n  return state.transitions.filter(function(transition){ return !transition.events || ( transition.events && transition.events.length === 0 ); });\n}\n\n//model accessor functions\nvar query = {\n    isDescendant : function(s1, s2){\n      //Returns 'true' if state1 is a descendant of state2 (a child, or a child of a child, or a child of a child of a child, etc.) Otherwise returns 'false'.\n      return s2.descendants.indexOf(s1) > -1;\n    },\n    getAncestors: function(s, root) {\n        var ancestors, index, state;\n        index = s.ancestors.indexOf(root);\n        if (index > -1) {\n            return s.ancestors.slice(0, index);\n        } else {\n            return s.ancestors;\n        }\n    },\n    /** @this {model} */\n    getAncestorsOrSelf: function(s, root) {\n        return [s].concat(this.getAncestors(s, root));\n    },\n    getDescendantsOrSelf: function(s) {\n        return [s].concat(s.descendants);\n    }\n};\n\n//priority comparison functions\nfunction getTransitionWithHigherSourceChildPriority(_args) {\n    let t1 = _args[0], t2 = _args[1];\n    var r = getStateWithHigherSourceChildPriority(t1.source, t2.source);\n    //compare transitions based first on depth, then based on document order\n    if (t1.source.depth < t2.source.depth) {\n        return t2;\n    } else if (t2.source.depth < t1.source.depth) {\n        return t1;\n    } else {\n       if (t1.documentOrder < t2.documentOrder) {\n            return t1;\n        } else {\n            return t2;\n        }\n    }\n}\n\nfunction sortInEntryOrder(s1, s2){\n  return getStateWithHigherSourceChildPriority(s1, s2) * -1\n}\n\nfunction getStateWithHigherSourceChildPriority(s1, s2) {\n    //compare states based first on depth, then based on document order\n    if (s1.depth > s2.depth) {\n        return -1;\n    } else if (s1.depth < s2.depth) {\n        return 1;\n    } else {\n        //Equality\n        if (s1.documentOrder < s2.documentOrder) {\n            return 1;\n        } else if (s1.documentOrder > s2.documentOrder) {\n            return -1;\n        } else{\n            return 0;\n        }\n    }\n}\n\nfunction initializeModelGeneratorFn(modelFn, opts, interpreter){\n    return modelFn.call(interpreter,\n        opts._x,\n        opts._x._sessionid,\n        opts._x._ioprocessors,\n        interpreter.isIn.bind(interpreter));\n}\n\nfunction deserializeSerializedConfiguration(serializedConfiguration,idToStateMap){\n  return serializedConfiguration.map(function(id){\n    var state = idToStateMap.get(id);\n    if(!state) throw new Error('Error loading serialized configuration. Unable to locate state with id ' + id);\n    return state;\n  });\n}\n\nfunction deserializeHistory(serializedHistory,idToStateMap){\n  var o = {};\n  Object.keys(serializedHistory).forEach(function(sid){\n    o[sid] = serializedHistory[sid].map(function(id){\n      var state = idToStateMap.get(id);\n      if(!state) throw new Error('Error loading serialized history. Unable to locate state with id ' + id);\n      return state;\n    });\n  });\n  return o;\n}\n\nconst printTrace = typeof process !== 'undefined' && !!process.env.DEBUG;\n\nBaseInterpreter.EVENTS = [\n  'onEntry',\n  'onExit',\n  'onTransition',\n  'onError',\n  'onBigStepBegin',\n  'onBigStepSuspend',\n  'onBigStepResume',\n  'onSmallStepBegin',\n  'onSmallStepEnd',\n  'onBigStepEnd'\n];\n\n/** @constructor */\nfunction BaseInterpreter(modelOrFnGenerator, opts){\n\n    EventEmitter.call(this);\n\n    this._scriptingContext = opts.interpreterScriptingContext || (opts.InterpreterScriptingContext ? new opts.InterpreterScriptingContext(this) : {}); \n\n\n    this.opts = opts || {};\n\n    this.opts.generateSessionid = this.opts.generateSessionid || BaseInterpreter.generateSessionid;\n    this.opts.sessionid = this.opts.sessionid || this.opts.generateSessionid();\n    this.opts.sessionRegistry = this.opts.sessionRegistry || BaseInterpreter.sessionRegistry;  //TODO: define a better interface. For now, assume a Map<sessionid, session>\n\n\n    let _ioprocessors = {};\n    _ioprocessors[SCXML_IOPROCESSOR_TYPE] = {\n      location : `#_scxml_${this.opts.sessionid}`\n    }\n    _ioprocessors.scxml = _ioprocessors[SCXML_IOPROCESSOR_TYPE];    //alias\n\n    //SCXML system variables:\n    opts._x = {\n        _sessionid : opts.sessionid,\n        _ioprocessors : _ioprocessors\n    };\n\n\n    var model;\n    if(typeof modelOrFnGenerator === 'function'){\n        model = initializeModelGeneratorFn(modelOrFnGenerator, opts, this);\n    }else if(typeof modelOrFnGenerator === 'object'){\n        model = JSON.parse(JSON.stringify(modelOrFnGenerator)); //assume object\n    }else{\n        throw new Error('Unexpected model type. Expected model factory function, or scjson object.');\n    }\n\n    this._model = initializeModel(model);\n\n    this.opts.console = opts.console || (typeof console === 'undefined' ? {log : function(){}} : console);   //rely on global console if this console is undefined\n    this.opts.Set = this.opts.Set || ArraySet;\n    this.opts.priorityComparisonFn = this.opts.priorityComparisonFn || getTransitionWithHigherSourceChildPriority;\n    this.opts.transitionSelector = this.opts.transitionSelector || scxmlPrefixTransitionSelector;\n\n    this.opts.sessionRegistry.set(String(this.opts.sessionid), this);\n\n    this._scriptingContext.log = this._scriptingContext.log || (function log(){ \n      if(this.opts.console.log.apply){\n        this.opts.console.log.apply(this.opts.console, arguments); \n      } else {\n        //console.log on older IE does not support Function.apply, so just pass him the first argument. Best we can do for now.\n        this.opts.console.log(Array.prototype.slice.apply(arguments).join(',')); \n      }\n    }.bind(this));   //set up default scripting context log function\n\n    this._externalEventQueue = [];\n    this._internalEventQueue = [];\n\n    if(opts.params){\n      this._model.$deserializeDatamodel(opts.params);   //load up the datamodel\n    }\n\n    //check if we're loading from a previous snapshot\n    if(opts.snapshot){\n      this._configuration = new this.opts.Set(deserializeSerializedConfiguration(opts.snapshot[0], this._model.$idToStateMap));\n      this._historyValue = deserializeHistory(opts.snapshot[1], this._model.$idToStateMap); \n      this._isInFinalState = opts.snapshot[2];\n      this._model.$deserializeDatamodel(opts.snapshot[3]);   //load up the datamodel\n      this._internalEventQueue = opts.snapshot[4];\n    }else{\n      this._configuration = new this.opts.Set();\n      this._historyValue = {};\n      this._isInFinalState = false;\n    }\n\n    //add debug logging\n    BaseInterpreter.EVENTS.forEach(function(event){\n      this.on(event, this._log.bind(this,event));\n    }, this);\n}\n\n//some global singletons to use to generate in-memory session ids, in case the user does not specify these data structures\nBaseInterpreter.sessionIdCounter = 1;\nBaseInterpreter.generateSessionid = function(){\n  return BaseInterpreter.sessionIdCounter++;\n}\nBaseInterpreter.sessionRegistry = new Map();\n\nBaseInterpreter.prototype = extend(beget(EventEmitter.prototype),{\n  \n    /** @expose */\n    //cancel an invoked session\n    cancel : function(){\n      delete this.opts.parentSession;\n      if(this._isInFinalState) return;\n      this._isInFinalState = true;\n      this._log(`session cancelled ${this.opts.invokeid}`);\n      this._exitInterpreter(null);\n    },\n\n    _exitInterpreter : function(event){\n      //TODO: cancel invoked sessions\n      //cancel all delayed sends when we enter into a final state.\n      this._cancelAllDelayedSends();\n\n      let statesToExit = this._getFullConfiguration().sort(getStateWithHigherSourceChildPriority);\n\n      for (var j = 0, len = statesToExit.length; j < len; j++) {\n          var stateExited = statesToExit[j];\n\n          if(stateExited.onExit !== undefined) {\n              for (var exitIdx = 0, exitLen = stateExited.onExit.length; exitIdx < exitLen; exitIdx++) {\n                  let block = stateExited.onExit[exitIdx];\n                  for (let blockIdx = 0, blockLen = block.length; blockIdx < blockLen; blockIdx++) {\n                      let actionRef = block[blockIdx];\n                      try {\n                        actionRef.call(this._scriptingContext, null);\n                      } catch (e){\n                        this._handleError(e, actionRef);\n                        break;\n                      }\n                  }\n              }\n          }\n\n          //cancel invoked session\n          if(stateExited.invokes) stateExited.invokes.forEach( invoke => {\n            this._scriptingContext.cancelInvoke(invoke.id);\n          })\n\n          //if he is a top-level <final> state, then return the done event\n          if( stateExited.$type === 'final' &&\n              stateExited.parent.$type === 'scxml'){\n\n            if(this.opts.parentSession){\n              this._scriptingContext.send({\n                target: '#_parent', \n                name: 'done.invoke.' + this.opts.invokeid,\n                data : stateExited.donedata && stateExited.donedata.call(this._scriptingContext, event)\n              });\n            }\n\n            this.opts.sessionRegistry.delete(this.opts.sessionid);\n            this.emit('onExitInterpreter', event);\n          }\n      }\n\n    },\n\n    /** @expose */\n    start : function() {\n        this._initStart();\n        this._performBigStep();\n        return this.getConfiguration();\n    },\n\n    /**\n     * Starts the interpreter asynchronously\n     * @param  {Function} cb Callback invoked with an error or the interpreter's stable configuration\n     * @expose\n     */\n    startAsync : function(cb) {\n        cb = this._initStart(cb);\n        this.genAsync(null, cb);\n    },\n\n    _initStart : function(cb){\n        if (typeof cb !== 'function') {\n            cb = nop;\n        }\n\n        this._log(\"performing initial big step\");\n\n        //We effectively need to figure out states to enter here to populate initial config. assuming root is compound state makes this simple.\n        //but if we want it to be parallel, then this becomes more complex. so when initializing the model, we add a 'fake' root state, which\n        //makes the following operation safe.\n        this._model.initialRef.forEach( s => this._configuration.add(s) );\n\n        return cb;\n    },\n\n    /** @expose */\n    getConfiguration : function() {\n        return this._configuration.iter().map(function(s){return s.id;});\n    },\n\n    _getFullConfiguration : function(){\n        return this._configuration.iter().\n                map(function(s){ return [s].concat(query.getAncestors(s));},this).\n                reduce(function(a,b){return a.concat(b);},[]).    //flatten\n                reduce(function(a,b){return a.indexOf(b) > -1 ? a : a.concat(b);},[]); //uniq\n    },\n\n\n    /** @expose */\n    getFullConfiguration : function() {\n        return this._getFullConfiguration().map(function(s){return s.id;});\n    },\n\n\n    /** @expose */\n    isIn : function(stateName) {\n        return this.getFullConfiguration().indexOf(stateName) > -1;\n    },\n\n    /** @expose */\n    isFinal : function(stateName) {\n        return this._isInFinalState;\n    },\n\n    /** @private */\n    _performBigStep : function(e) {\n        let currentEvent, keepGoing, allStatesExited, allStatesEntered;\n        [allStatesExited, allStatesEntered, keepGoing, currentEvent] = this._startBigStep(e);\n\n        while (keepGoing) {\n          [currentEvent, keepGoing] = this._selectTransitionsAndPerformSmallStep(currentEvent, allStatesEntered, allStatesExited);\n        }\n\n        this._finishBigStep(currentEvent, allStatesEntered, allStatesExited);\n    },\n\n    _selectTransitionsAndPerformSmallStep : function(currentEvent, allStatesEntered, allStatesExited){\n        //first select with null event\n        var selectedTransitions  = this._selectTransitions(currentEvent, true);\n        if(selectedTransitions.isEmpty()){\n          let ev = this._internalEventQueue.shift();\n          if(ev){ \n            currentEvent = ev;\n            selectedTransitions = this._selectTransitions(currentEvent, false);\n          }\n        }\n\n        if(!selectedTransitions.isEmpty()){\n          this.emit('onSmallStepBegin', currentEvent);\n          let statesExited, statesEntered;\n          [statesExited, statesEntered] = this._performSmallStep(currentEvent, selectedTransitions);\n          if(statesExited) statesExited.forEach( s => allStatesExited.add(s) );\n          if(statesEntered) statesEntered.forEach( s => allStatesEntered.add(s) );\n          this.emit('onSmallStepEnd', currentEvent);\n        }\n        let keepGoing = !selectedTransitions.isEmpty() || this._internalEventQueue.length;\n        return [currentEvent, keepGoing];\n    },\n\n    _startBigStep : function(e){\n        this.emit('onBigStepBegin', e);\n\n        //do applyFinalize and autoforward\n        this._configuration.iter().forEach(state => {\n          if(state.invokes) state.invokes.forEach( invoke =>  {\n            if(invoke.autoforward){\n              //autoforward\n              this._scriptingContext.send({\n                target: `#_${invoke.id}`, \n                name: e.name,\n                data : e.data\n              });\n            }\n            if(invoke.id === e.invokeid){\n              //applyFinalize\n              if(invoke.finalize) invoke.finalize.forEach( action =>  this._evaluateAction(e, action));\n            } \n          })\n        }); \n\n        if (e) this._internalEventQueue.push(e);\n\n        let allStatesExited = new Set(), allStatesEntered = new Set();\n        let keepGoing = true;\n        let currentEvent = e;\n        return [allStatesEntered, allStatesExited, keepGoing, currentEvent];\n    },\n\n    _finishBigStep : function(e, allStatesEntered, allStatesExited, cb){\n        let statesToInvoke = Array.from(new Set([...allStatesEntered].filter(s => s.invokes && !allStatesExited.has(s)))).sort(sortInEntryOrder);\n\n        // Here we invoke whatever needs to be invoked. The implementation of 'invoke' is platform-specific\n        statesToInvoke.forEach( s => {\n            s.invokes.forEach( f =>  this._evaluateAction(e,f) )\n        });\n\n        // cancel invoke for allStatesExited\n        allStatesExited.forEach( s => {\n          if(s.invokes) s.invokes.forEach( invoke => {\n            this._scriptingContext.cancelInvoke(invoke.id);\n          })\n        });\n\n        // TODO: Invoking may have raised internal error events and we iterate to handle them        \n        //if not internalQueue.isEmpty():\n        //    continue\n\n        this._isInFinalState = this._configuration.iter().every(function(s){ return s.typeEnum === STATE_TYPES.FINAL; });\n        if(this._isInFinalState){\n          this._exitInterpreter(e);\n        }\n        this.emit('onBigStepEnd');\n        if(cb) cb(undefined, this.getConfiguration());\n    },\n\n    _cancelAllDelayedSends : function(){\n      for( let timeoutOptions of this._scriptingContext._timeouts){\n        if(!timeoutOptions.sendOptions.delay) continue;\n        this._log('cancelling delayed send', timeoutOptions);\n        clearTimeout(timeoutOptions.timeoutHandle);\n        this._scriptingContext._timeouts.delete(timeoutOptions);\n      }\n      Object.keys(this._scriptingContext._timeoutMap).forEach(function(key){\n        delete this._scriptingContext._timeoutMap[key];\n      }, this);\n    },\n\n    _performBigStepAsync : function(e, cb) {\n        let currentEvent, keepGoing, allStatesExited, allStatesEntered;\n        [allStatesExited, allStatesEntered, keepGoing, currentEvent] = this._startBigStep(e);\n\n        function nextStep(emit){\n          this.emit(emit);\n          [currentEvent, keepGoing] = this._selectTransitionsAndPerformSmallStep(currentEvent, allStatesEntered, allStatesExited);\n\n          if(keepGoing){\n            this.emit('onBigStepSuspend');\n            setImmediate(nextStep.bind(this),'onBigStepResume');\n          }else{\n            this._finishBigStep(currentEvent, allStatesEntered, allStatesExited, cb);\n          }\n        }\n        nextStep.call(this,'onBigStepBegin');\n    },\n\n    /** @private */\n    _performSmallStep : function(currentEvent, selectedTransitions) {\n\n        this._log(\"selecting transitions with currentEvent\", currentEvent);\n\n        this._log(\"selected transitions\", selectedTransitions);\n\n        let statesExited,\n            statesEntered;\n\n        if (!selectedTransitions.isEmpty()) {\n\n            //we only want to enter and exit states from transitions with targets\n            //filter out targetless transitions here - we will only use these to execute transition actions\n            var selectedTransitionsWithTargets = new this.opts.Set(selectedTransitions.iter().filter(transitionWithTargets));\n\n            statesExited = this._exitStates(currentEvent, selectedTransitionsWithTargets)\n            this._executeTransitions(currentEvent, selectedTransitions);\n            statesEntered = this._enterStates(currentEvent, selectedTransitionsWithTargets)\n\n            this._log(\"new configuration \", this._configuration);\n        }\n\n        return [statesExited, statesEntered];\n    },\n\n    _exitStates : function(currentEvent, selectedTransitionsWithTargets){\n        let basicStatesExited, statesExited;\n        [basicStatesExited, statesExited] = this._getStatesExited(selectedTransitionsWithTargets); \n\n        this._log('exiting states')\n        for (var j = 0, len = statesExited.length; j < len; j++) {\n            var stateExited = statesExited[j];\n\n            if(stateExited.isAtomic) this._configuration.remove(stateExited);\n\n            this._log(\"exiting \", stateExited.id);\n\n            //invoke listeners\n            this.emit('onExit',stateExited.id)\n\n            if(stateExited.onExit !== undefined) {\n                for (var exitIdx = 0, exitLen = stateExited.onExit.length; exitIdx < exitLen; exitIdx++) {\n                    let block = stateExited.onExit[exitIdx];\n                    for (let blockIdx = 0, blockLen = block.length; blockIdx < blockLen; blockIdx++) {\n                        let actionRef = block[blockIdx];\n                        try {\n                          actionRef.call(this._scriptingContext, currentEvent);\n                        } catch (e){\n                          this._handleError(e, actionRef);\n                          break;\n                        }\n                    }\n                }\n            }\n\n            var f;\n            if (stateExited.historyRef) {\n                for(let historyRef of stateExited.historyRef){\n                    if (historyRef.isDeep) {\n                        f = function(s0) {\n                            return s0.typeEnum === STATE_TYPES.BASIC && stateExited.descendants.indexOf(s0) > -1;\n                        };\n                    } else {\n                        f = function(s0) {\n                            return s0.parent === stateExited;\n                        };\n                    }\n                    //update history\n                    this._historyValue[historyRef.id] = statesExited.filter(f);\n                }\n            }\n        }\n\n        return statesExited;\n    },\n\n    _executeTransitions : function(currentEvent, selectedTransitions){\n        var sortedTransitions = selectedTransitions.iter().sort(transitionComparator);\n\n        this._log(\"executing transitition actions\");\n        for (var stxIdx = 0, len = sortedTransitions.length; stxIdx < len; stxIdx++) {\n            var transition = sortedTransitions[stxIdx];\n\n            var targetIds = transition.targets && transition.targets.map(function(target){return target.id;});\n\n            this.emit('onTransition',transition.source.id,targetIds, transition.source.transitions.indexOf(transition));\n\n            if(transition.onTransition !== undefined) {\n                for (var txIdx = 0, txLen = transition.onTransition.length; txIdx < txLen; txIdx++) {\n                    let actionRef = transition.onTransition[txIdx];\n                    try {\n                      actionRef.call(this._scriptingContext, currentEvent);\n                    } catch (e){\n                      this._handleError(e, actionRef);\n                      break;\n                    }\n                }\n            }\n        }\n\n\n    },\n\n    _enterStates : function(currentEvent, selectedTransitionsWithTargets){\n        this._log(\"entering states\");\n\n        let statesEntered = new Set();\n        let statesForDefaultEntry = new Set();\n        // initialize the temporary table for default content in history states\n        let defaultHistoryContent = {};\n        this._computeEntrySet(selectedTransitionsWithTargets, statesEntered, statesForDefaultEntry, defaultHistoryContent); \n        statesEntered = [...statesEntered].sort(sortInEntryOrder); \n\n        this._log(\"statesEntered \", statesEntered);\n\n        for (var enterIdx = 0, enterLen = statesEntered.length; enterIdx < enterLen; enterIdx++) {\n            var stateEntered = statesEntered[enterIdx];\n\n            if(stateEntered.isAtomic) this._configuration.add(stateEntered);\n\n            this._log(\"entering\", stateEntered.id);\n\n            this.emit('onEntry',stateEntered.id);\n\n            if(stateEntered.onEntry !== undefined) {\n                for (var entryIdx = 0, entryLen = stateEntered.onEntry.length; entryIdx < entryLen; entryIdx++) {\n                    let block = stateEntered.onEntry[entryIdx];\n                    for (let blockIdx = 0, blockLen = block.length; blockIdx < blockLen; blockIdx++) {\n                        let actionRef = block[blockIdx];\n                        try {\n                          actionRef.call(this._scriptingContext, currentEvent);\n                        } catch (e){\n                          this._handleError(e, actionRef);\n                          break;\n                        }\n                    }\n                }\n            }\n\n            if(statesForDefaultEntry.has(stateEntered)){\n                for(let initialState of stateEntered.initialRef){\n                    this.emit('onDefaultEntry', initialState.id);\n                    if(initialState.typeEnum === STATE_TYPES.INITIAL){\n                        let transition = initialState.transitions[0]\n                        if(transition.onTransition !== undefined) {\n                            this._log('executing initial transition content for initial state of parent state',stateEntered.id);\n                            for (var txIdx = 0, txLen = transition.onTransition.length; txIdx < txLen; txIdx++) {\n                                let actionRef = transition.onTransition[txIdx];\n                                try {\n                                  actionRef.call(this._scriptingContext, currentEvent);\n                                } catch (e){\n                                  this._handleError(e, actionRef);\n                                  break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n\n            if(defaultHistoryContent[stateEntered.id]){\n                let transition = defaultHistoryContent[stateEntered.id]\n                if(transition.onTransition !== undefined) {\n                    this._log('executing history transition content for history state of parent state',stateEntered.id);\n                    for (var txIdx = 0, txLen = transition.onTransition.length; txIdx < txLen; txIdx++) {\n                        let actionRef = transition.onTransition[txIdx];\n                        try {\n                          actionRef.call(this._scriptingContext, currentEvent);\n                        } catch (e){\n                          this._handleError(e, actionRef);\n                          break;\n                        }\n                    }\n                }\n            }\n        }\n\n        for (var enterIdx = 0, enterLen = statesEntered.length; enterIdx < enterLen; enterIdx++) {\n            var stateEntered = statesEntered[enterIdx];\n            if(stateEntered.typeEnum === STATE_TYPES.FINAL){\n              let parent = stateEntered.parent;\n              let grandparent = parent.parent;\n              this._internalEventQueue.push({name : \"done.state.\" + parent.id, data : stateEntered.donedata && stateEntered.donedata.call(this._scriptingContext, currentEvent)});\n              if(grandparent && grandparent.typeEnum === STATE_TYPES.PARALLEL){\n                  if(grandparent.states.every(s => this.isInFinalState(s) )){\n                      this._internalEventQueue.push({name : \"done.state.\" + grandparent.id});\n                  }\n              }\n            }\n        }\n\n        return statesEntered;\n    },\n\n    isInFinalState : function(s){\n        if(s.typeEnum === STATE_TYPES.COMPOSITE){\n            return s.states.some(s => s.typeEnum === STATE_TYPES.FINAL && this._configuration.contains(s));\n        }else if(s.typeEnum === STATE_TYPES.PARALLEL){\n            return s.states.every(this.isInFinalState.bind(this))\n        }else{\n            return false\n        }\n    },\n\n    /** @private */\n    _evaluateAction : function(currentEvent, actionRef) {\n        try {\n          return actionRef.call(this._scriptingContext, currentEvent);     //SCXML system variables\n        } catch (e){\n          this._handleError(e, actionRef);\n        }\n    },\n\n    _handleError : function(e, actionRef){\n      let event = \n        e instanceof Error || (typeof e.__proto__.name === 'string' && e.__proto__.name.match(/^.*Error$/)) ?  //we can't just do 'e instanceof Error', because the Error object in the sandbox is from a different context, and instanceof will return false\n          {\n            name:'error.execution',\n            data : {\n              tagname: actionRef.tagname, \n              line: actionRef.line, \n              column: actionRef.column,\n              reason: e.message\n            },\n            type : 'platform'\n          } : \n          (e.name ? \n            e : \n            {\n              name:'error.execution',\n              data:e,\n              type : 'platform'\n            }\n          );\n      this._internalEventQueue.push(event);\n      this.emit('onError', event);\n    },\n\n    /** @private */\n    _getStatesExited : function(transitions) {\n        var statesExited = new this.opts.Set();\n        var basicStatesExited = new this.opts.Set();\n\n        //States exited are defined to be active states that are\n        //descendants of the scope of each priority-enabled transition.\n        //Here, we iterate through the transitions, and collect states\n        //that match this condition. \n        var transitionList = transitions.iter();\n        for (var txIdx = 0, txLen = transitionList.length; txIdx < txLen; txIdx++) {\n            var transition = transitionList[txIdx];\n            var scope = transition.scope,\n                desc = scope.descendants;\n\n            //For each state in the configuration\n            //is that state a descendant of the transition scope?\n            //Store ancestors of that state up to but not including the scope.\n            var configList = this._configuration.iter();\n            for (var cfgIdx = 0, cfgLen = configList.length; cfgIdx < cfgLen; cfgIdx++) {\n                var state = configList[cfgIdx];\n                if(desc.indexOf(state) > -1){\n                    basicStatesExited.add(state);\n                    statesExited.add(state);\n                    var ancestors = query.getAncestors(state,scope); \n                    for (var ancIdx = 0, ancLen = ancestors.length; ancIdx < ancLen; ancIdx++) { \n                        statesExited.add(ancestors[ancIdx]);\n                    }\n                }\n            }\n        }\n\n        var sortedStatesExited = statesExited.iter().sort(getStateWithHigherSourceChildPriority);\n        return [basicStatesExited, sortedStatesExited];\n    },\n\n    _computeEntrySet : function(transitions, statesToEnter, statesForDefaultEntry, defaultHistoryContent){\n      for(let t of transitions.iter()){\n          for(let s of t.targets){\n              this._addDescendantStatesToEnter(s,statesToEnter, statesForDefaultEntry, defaultHistoryContent) \n          }\n          let ancestor = t.scope;\n          for(let s of this._getEffectiveTargetStates(t)){\n              this._addAncestorStatesToEnter(s, ancestor, statesToEnter, statesForDefaultEntry, defaultHistoryContent)\n          }\n      }\n    },\n\n    _getEffectiveTargetStates : function(transition){\n      let targets = new Set();\n      for(let s of transition.targets){\n          if(s.typeEnum === STATE_TYPES.HISTORY){\n              if(s.id in this._historyValue)\n                  this._historyValue[s.id].forEach( state => targets.add(state))\n              else\n                  [...this._getEffectiveTargetStates(s.transitions[0])].forEach( state => targets.add(state))\n          } else {\n              targets.add(s)\n          }\n      }\n      return targets\n    },\n\n    _addDescendantStatesToEnter : function(state,statesToEnter, statesForDefaultEntry, defaultHistoryContent){\n      if(state.typeEnum === STATE_TYPES.HISTORY){\n          if(this._historyValue[state.id]){\n              for(let s of this._historyValue[state.id])\n                  this._addDescendantStatesToEnter(s,statesToEnter, statesForDefaultEntry, defaultHistoryContent)\n              \n              for(let s of this._historyValue[state.id])\n                  this._addAncestorStatesToEnter(s, state.parent, statesToEnter, statesForDefaultEntry, defaultHistoryContent)\n          } else {\n            defaultHistoryContent[state.parent.id] = state.transitions[0]\n            for(let s of state.transitions[0].targets)\n                this._addDescendantStatesToEnter(s,statesToEnter,statesForDefaultEntry, defaultHistoryContent)\n            \n            for(let s of state.transitions[0].targets)\n                this._addAncestorStatesToEnter(s, state.parent, statesToEnter, statesForDefaultEntry, defaultHistoryContent)\n            \n          }\n      } else {\n          statesToEnter.add(state)\n          if(state.typeEnum === STATE_TYPES.COMPOSITE){\n              statesForDefaultEntry.add(state)\n              //for each state in initialRef, if it is an initial state, then add ancestors and descendants.\n              for(let s of state.initialRef){\n                  let targets = s.typeEnum === STATE_TYPES.INITIAL ? s.transitions[0].targets : [s]; \n                  for(let targetState of targets){\n                    this._addDescendantStatesToEnter(targetState,statesToEnter, statesForDefaultEntry, defaultHistoryContent)\n                  }\n              }\n              for(let s of state.initialRef){\n                  let targets = s.typeEnum === STATE_TYPES.INITIAL ? s.transitions[0].targets : [s]; \n                  for(let targetState of targets){\n                    this._addAncestorStatesToEnter(targetState, state, statesToEnter, statesForDefaultEntry, defaultHistoryContent)\n                  }\n              }\n          }else{\n              if(state.typeEnum === STATE_TYPES.PARALLEL){\n                  for(let child of state.states){\n                      if(![...statesToEnter].some(s => query.isDescendant(s, child))){\n                          this._addDescendantStatesToEnter(child,statesToEnter, statesForDefaultEntry, defaultHistoryContent) \n                      }\n                  }\n              }\n          }\n      }\n    },\n\n    _addAncestorStatesToEnter : function(state, ancestor, statesToEnter, statesForDefaultEntry, defaultHistoryContent){\n      let traverse = (anc) => {\n          if(anc.typeEnum === STATE_TYPES.PARALLEL){\n              for(let child of anc.states){\n                  if(child.typeEnum !== STATE_TYPES.HISTORY && ![...statesToEnter].some(s => query.isDescendant(s, child))){\n                      this._addDescendantStatesToEnter(child,statesToEnter, statesForDefaultEntry, defaultHistoryContent) \n                  }\n              }\n          }\n      };\n      for(let anc of query.getAncestors(state,ancestor)){\n          statesToEnter.add(anc)\n          traverse(anc)\n      }\n      traverse(ancestor)\n    },\n\n    /** @private */\n    _selectTransitions : function(currentEvent, selectEventlessTransitions) {\n        var transitionSelector = this.opts.transitionSelector;\n        var enabledTransitions = new this.opts.Set();\n\n        var e = this._evaluateAction.bind(this,currentEvent);\n\n        let atomicStates = this._configuration.iter().sort(transitionComparator);\n        for(let state of atomicStates){\n            loop: for(let s of [state].concat(query.getAncestors(state))){\n                for(let t of s.transitions){\n                    if(transitionSelector(t, currentEvent, e, selectEventlessTransitions)){\n                        enabledTransitions.add(t);\n                        break loop;\n                    }\n                }\n            }\n        }\n\n        var priorityEnabledTransitions = this._removeConflictingTransition(enabledTransitions);\n\n        this._log(\"priorityEnabledTransitions\", priorityEnabledTransitions);\n        \n        return priorityEnabledTransitions;\n    },\n\n    \n    _computeExitSet : function(transitions) {\n      let statesToExit = new Set();\n      for(let t of transitions){\n          if(t.targets){\n              let scope = t.scope;\n              for(let s of this._getFullConfiguration()){\n                  if(query.isDescendant(s,scope)) statesToExit.add(s);\n              }\n          }\n      }\n      return statesToExit; \n    },\n   \n\n    /** @private */\n    _removeConflictingTransition : function(enabledTransitions) {\n      let filteredTransitions = new this.opts.Set()\n      //toList sorts the transitions in the order of the states that selected them\n      for( let t1 of enabledTransitions.iter()){\n          let t1Preempted = false;\n          let transitionsToRemove = new Set()\n          for (let t2 of filteredTransitions.iter()){\n              //TODO: can we compute this statically? for example, by checking if the transition scopes are arena orthogonal?\n              let t1ExitSet = this._computeExitSet([t1]);\n              let t2ExitSet = this._computeExitSet([t2]);\n              let hasIntersection = [...t1ExitSet].some( s => t2ExitSet.has(s) )  || [...t2ExitSet].some( s => t1ExitSet.has(s));\n              this._log('t1ExitSet',t1.source.id,[...t1ExitSet].map( s => s.id ))\n              this._log('t2ExitSet',t2.source.id,[...t2ExitSet].map( s => s.id ))\n              this._log('hasIntersection',hasIntersection)\n              if(hasIntersection){\n                  if(t2.source.descendants.indexOf(t1.source) > -1){    //is this the same as being ancestrally related?\n                      transitionsToRemove.add(t2)\n                  }else{ \n                      t1Preempted = true;\n                      break\n                  }\n              }\n          }\n          if(!t1Preempted){\n              for(let t3 of transitionsToRemove){\n                  filteredTransitions.remove(t3)\n              }\n              filteredTransitions.add(t1)\n          }\n      }\n             \n      return filteredTransitions;\n    },\n\n    _log : function(){\n      if(printTrace){\n        var args = Array.from(arguments);\n        this.opts.console.log( \n          `${args[0]}: ${\n            args.slice(1).map(function(arg){\n              return arg === null ? 'null' : \n                ( arg === undefined ? 'undefined' : \n                  ( typeof arg === 'string' ? arg : \n                    ( arg.toString() === '[object Object]' ? util.inspect(arg) : arg.toString())));\n\n            }).join(', ')\n          }\\n`\n        );\n      }\n    },\n\n    /*\n        registerListener provides a generic mechanism to subscribe to state change and runtime error notifications.\n        Can be used for logging and debugging. For example, can attach a logger that simply logs the state changes.\n        Or can attach a network debugging client that sends state change notifications to a debugging server.\n    \n        listener is of the form:\n        {\n          onEntry : function(stateId){},\n          onExit : function(stateId){},\n          onTransition : function(sourceStateId,targetStatesIds[]){},\n          onError: function(errorInfo){},\n          onBigStepBegin: function(){},\n          onBigStepResume: function(){},\n          onBigStepSuspend: function(){},\n          onBigStepEnd: function(){}\n          onSmallStepBegin: function(event){},\n          onSmallStepEnd: function(){}\n        }\n    */\n    //TODO: refactor this to be event emitter? \n\n    /** @expose */\n    registerListener : function(listener){\n        BaseInterpreter.EVENTS.forEach(function(event){\n          if(listener[event]) this.on(event,listener[event]);\n        }, this);\n    },\n\n    /** @expose */\n    unregisterListener : function(listener){\n        BaseInterpreter.EVENTS.forEach(function(event){\n          if(listener[event]) this.off(event,listener[event]);\n        }, this);\n    },\n\n    /** @expose */\n    getAllTransitionEvents : function(){\n        var events = {};\n        function getEvents(state){\n\n            if(state.transitions){\n                for (var txIdx = 0, txLen = state.transitions.length; txIdx < txLen; txIdx++) {\n                    events[state.transitions[txIdx].event] = true;\n                }\n            }\n\n            if(state.states) {\n                for (var stateIdx = 0, stateLen = state.states.length; stateIdx < stateLen; stateIdx++) {\n                    getEvents(state.states[stateIdx]);\n                }\n            }\n        }\n\n        getEvents(this._model);\n\n        return Object.keys(events);\n    },\n\n    \n    /** @expose */\n    /**\n      Three things capture the current snapshot of a running SCION interpreter:\n\n      * basic configuration (the set of basic states the state machine is in)\n      * history state values (the states the state machine was in last time it was in the parent of a history state)\n      * the datamodel\n      \n      Note that this assumes that the method to serialize a scion.SCXML\n      instance is not called when the interpreter is executing a big-step (e.g. after\n      scion.SCXML.prototype.gen is called, and before the call to gen returns). If\n      the serialization method is called during the execution of a big-step, then the\n      inner event queue must also be saved. I do not expect this to be a common\n      requirement however, and therefore I believe it would be better to only support\n      serialization when the interpreter is not executing a big-step.\n    */\n    getSnapshot : function(){\n      return [\n        this.getConfiguration(),\n        this._serializeHistory(),\n        this._isInFinalState,\n        this._model.$serializeDatamodel(),\n        this._internalEventQueue.slice()\n      ];\n    },\n\n    _serializeHistory : function(){\n      var o = {};\n      Object.keys(this._historyValue).forEach(function(sid){\n        o[sid] = this._historyValue[sid].map(function(state){return state.id});\n      },this);\n      return o;\n    }\n});\n\n/**\n * @constructor\n * @extends BaseInterpreter\n */\nfunction Statechart(model, opts) {\n    opts = opts || {};\n\n    opts.InterpreterScriptingContext = opts.InterpreterScriptingContext || InterpreterScriptingContext;\n\n    this._isStepping = false;\n\n    BaseInterpreter.call(this,model,opts);     //call super constructor\n\n    module.exports.emit('new',this);\n}\n\nfunction beget(o){\n    function F(){}\n    F.prototype = o;\n    return new F();\n}\n\n/**\n * Do nothing\n */\nfunction nop() {}\n\n//Statechart.prototype = Object.create(BaseInterpreter.prototype);\n//would like to use Object.create here, but not portable, but it's too complicated to use portably\nStatechart.prototype = beget(BaseInterpreter.prototype);    \n\n/** @expose */\nStatechart.prototype.gen = function(evtObjOrName,optionalData) {\n\n    var currentEvent;\n    switch(typeof evtObjOrName){\n        case 'string':\n            currentEvent = {name : evtObjOrName, data : optionalData};\n            break;\n        case 'object':\n            if(typeof evtObjOrName.name === 'string'){\n                currentEvent = evtObjOrName;\n            }else{\n                throw new Error('Event object must have \"name\" property of type string.');\n            }\n            break;\n        default:\n            throw new Error('First argument to gen must be a string or object.');\n    }\n\n    if(this._isStepping) throw new Error('Cannot call gen during a big-step');\n\n    //otherwise, kick him off\n    this._isStepping = true;\n\n    this._performBigStep(currentEvent);\n\n    this._isStepping = false;\n    return this.getConfiguration();\n};\n\n/**\n * Injects an external event into the interpreter asynchronously\n * @param  {object}   currentEvent The event to inject\n * @param {string} currentEvent.name The name of the event\n * @param {string} [currentEvent.data] The event data\n * @param  {Function} cb Callback invoked with an error or the interpreter's stable configuration\n * @expose\n */\nStatechart.prototype.genAsync = function(currentEvent, cb) {\n    if (currentEvent !== null && (typeof currentEvent !== 'object' || !currentEvent || typeof currentEvent.name !== 'string')) {\n        throw new Error('Expected currentEvent to be null or an Object with a name');\n    }\n    \n    if (typeof cb !== 'function') {\n        cb = nop;\n    }\n\n    this._externalEventQueue.push([currentEvent, cb]);\n\n    //the semantics we want are to return to the cb the results of processing that particular event.\n    function nextStep(e, c){\n      this._performBigStepAsync(e, function(err, config) {\n          c(err, config);\n\n          if(this._externalEventQueue.length){\n            nextStep.apply(this,this._externalEventQueue.shift());\n          }else{\n            this._isStepping = false;\n          }\n      }.bind(this));\n    }\n    if(!this._isStepping){ \n      this._isStepping = true;\n      nextStep.apply(this,this._externalEventQueue.shift());\n    }\n};\n\nfunction InterpreterScriptingContext(interpreter) {\n    this._interpreter = interpreter;\n    this._timeoutMap = {};\n    this._invokeMap = {};\n    this._timeouts = new Set()\n}\n\n//Regex from:\n//  http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n//  http://stackoverflow.com/a/6927878\nvar validateUriRegex = /(#_.*)|\\b((?:[a-z][\\w-]+:(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/i;\n\n//TODO: consider whether this is the API we would like to expose\nInterpreterScriptingContext.prototype = {\n    invokeSendTargetRegex  : /^#_(.*)$/,\n    scxmlSendTargetRegex  : /^#_scxml_(.*)$/,\n    raise : function(event){\n        this._installDefaultPropsOnEvent(event, true);\n        this._interpreter._internalEventQueue.push(event); \n    },\n    parseXmlStringAsDOM : function(xmlString){\n      return (this._interpreter.opts.xmlParser || InterpreterScriptingContext.xmlParser).parse(xmlString);\n    },\n    invoke : function(invokeObj){\n      //look up invoker by type. assume invokers are passed in as an option to constructor\n      this._invokeMap[invokeObj.id] = new Promise((resolve, reject) => {\n        (this._interpreter.opts.invokers || InterpreterScriptingContext.invokers)[invokeObj.type](this._interpreter, invokeObj, (err, session) => {\n          if(err) return reject(err);\n\n          this._interpreter.emit('onInvokedSessionInitialized', session);\n          resolve(session);\n        });\n      });\n    },\n    cancelInvoke : function(invokeid){\n      //TODO: on cancel invoke clean up this._invokeMap\n      let sessionPromise = this._invokeMap[invokeid];\n      this._interpreter._log(`cancelling session with invokeid ${invokeid}`);\n      if(sessionPromise){\n        this._interpreter._log(`sessionPromise found`);\n        sessionPromise.then( \n          ((session) => {\n            this._interpreter._log(`resolved session ${invokeid}. cancelling... `);\n            session.cancel(); \n            //clean up\n            delete this._invokeMap[invokeid];\n          }), \n          ( (err) => {\n            //TODO: dispatch error back into the state machine as error.communication\n          }));\n      }\n    },\n    _installDefaultPropsOnEvent : function(event,isInternal){\n      if(!isInternal){ \n        event.origin = this._interpreter.opts._x._ioprocessors.scxml.location;     //TODO: preserve original origin when we autoforward? \n        event.origintype = event.type || SCXML_IOPROCESSOR_TYPE;\n      }\n      if(typeof event.type === 'undefined'){\n        event.type = isInternal ? 'internal' : 'external';\n      }\n      [\n        'name',\n        'sendid',\n        'invokeid',\n        'data',\n        'origin',\n        'origintype'\n      ].forEach(prop => {\n        if(typeof event[prop] === 'undefined'){\n          event[prop] = undefined;\n        }\n      });\n    },\n    send : function(event, options){\n        this._interpreter._log('send event', event, options);\n        options = options || {};\n        var sendType = options.type || SCXML_IOPROCESSOR_TYPE;\n        //TODO: move these out\n        function validateSend(event, options, sendAction){\n          if(event.target){\n            var targetIsValidUri = validateUriRegex.test(event.target)\n            if(!targetIsValidUri){\n              throw { name : \"error.execution\", data: 'Target is not valid URI', sendid: event.sendid, type : 'platform' };\n            }\n          }\n          if( sendType !== SCXML_IOPROCESSOR_TYPE) {  //TODO: extend this to support HTTP, and other IO processors\n              throw { name : \"error.execution\", data: 'Unsupported event processor type', sendid: event.sendid, type : 'platform' };\n          }\n\n          sendAction.call(this, event, options);\n        }\n\n        function defaultSendAction (event, options) {\n\n          if( typeof setTimeout === 'undefined' ) throw new Error('Default implementation of Statechart.prototype.send will not work unless setTimeout is defined globally.');\n\n          var match;\n          if(event.target === '#_internal'){\n            this.raise(event);\n          }else{ \n            this._installDefaultPropsOnEvent(event, false);\n            event.origintype = SCXML_IOPROCESSOR_TYPE;      //TODO: extend this to support HTTP, and other IO processors\n                                                            //TODO : paramterize this based on send/@type?\n            if(!event.target){\n              doSend.call(this, this._interpreter);\n            }else if(event.target === '#_parent'){\n              if(this._interpreter.opts.parentSession){\n                event.invokeid = this._interpreter.opts.invokeid;\n                doSend.call(this, this._interpreter.opts.parentSession);\n              }else{\n                throw { name : \"error.communication\", data: 'Parent session not specified', sendid: event.sendid, type : 'platform' };\n              }\n            } else if(match = event.target.match(this.scxmlSendTargetRegex)){\n              let targetSessionId = match[1];\n              let session = this._interpreter.opts.sessionRegistry.get(targetSessionId)\n              if(session){\n                doSend.call(this,session);\n              }else {\n                throw {name : 'error.communication', sendid: event.sendid, type : 'platform'};\n              }\n            }else if(match = event.target.match(this.invokeSendTargetRegex)){\n              //TODO: test this code path.\n              var invokeId = match[1]\n              this._invokeMap[invokeId].then( (session) => {\n                doSend.call(this,session);\n              })\n            } else {\n              throw new Error('Unrecognized send target.'); //TODO: dispatch error back into the state machine\n            }\n          }\n\n          function doSend(session){\n            //TODO: we probably now need to refactor data structures:\n            //    this._timeouts\n            //    this._timeoutMap\n            var timeoutHandle = setTimeout(function(){\n              if (event.sendid) delete this._timeoutMap[event.sendid];\n              this._timeouts.delete(timeoutOptions);\n              if(this._interpreter.opts.doSend){\n                this._interpreter.opts.doSend(session, event);\n              }else{\n                session[this._interpreter.opts.sendAsync ? 'genAsync' : 'gen'](event);\n              }\n            }.bind(this), options.delay || 0);\n\n            var timeoutOptions = {\n              sendOptions : options,\n              timeoutHandle : timeoutHandle\n            };\n            if (event.sendid) this._timeoutMap[event.sendid] = timeoutHandle;\n            this._timeouts.add(timeoutOptions); \n          }\n        }\n\n        function publish(){\n          this._interpreter.emit(event.name,event.data);\n        }\n\n        //choose send function\n        //TODO: rethink how this custom send works\n        var sendFn;         \n        if(event.type === 'https://github.com/jbeard4/SCION#publish'){\n          sendFn = publish;\n        }else if(this._interpreter.opts.customSend){\n          sendFn = this._interpreter.opts.customSend;\n        }else{\n          sendFn = defaultSendAction;\n        }\n\n        options=options || {};\n\n        this._interpreter._log(\"sending event\", event.name, \"with content\", event.data, \"after delay\", options.delay);\n\n        validateSend.call(this, event, options, sendFn);\n    },\n    cancel : function(sendid){\n        if(this._interpreter.opts.customCancel) {\n            return this._interpreter.opts.customCancel.apply(this, [sendid]);\n        }\n\n        if( typeof clearTimeout === 'undefined' ) throw new Error('Default implementation of Statechart.prototype.cancel will not work unless setTimeout is defined globally.');\n\n        if (sendid in this._timeoutMap) {\n            this._interpreter._log(\"cancelling \", sendid, \" with timeout id \", this._timeoutMap[sendid]);\n            clearTimeout(this._timeoutMap[sendid]);\n        }\n    }\n};\n\nmodule.exports = extend(new EventEmitter,{\n    /** @expose */\n    BaseInterpreter: BaseInterpreter,\n    /** @expose */\n    Statechart: Statechart,\n    /** @expose */\n    ArraySet : ArraySet,\n    /** @expose */\n    STATE_TYPES : STATE_TYPES,\n    /** @expose */\n    initializeModel : initializeModel,\n    /** @expose */\n    InterpreterScriptingContext : InterpreterScriptingContext\n});\n"]}